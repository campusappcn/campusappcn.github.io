<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Spacetime</title>
  <subtitle>Blogs from campusapp.cn&#39;s crazy developers</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://campusappcn.github.io/"/>
  <updated>2016-04-09T08:58:54.000Z</updated>
  <id>http://campusappcn.github.io/</id>
  
  <author>
    <name>developers from campusapp.cn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ios的mock</title>
    <link href="http://campusappcn.github.io/2016/04/09/ios%E7%9A%84mock/"/>
    <id>http://campusappcn.github.io/2016/04/09/ios的mock/</id>
    <published>2016-04-09T08:01:39.000Z</published>
    <updated>2016-04-09T08:58:54.000Z</updated>
    
    <content type="html">&lt;p&gt;因为单元测试的缘故，在测试项目中接入了“OCMock”,觉得它的实现很有意思。所以就看了部分“OCMock”的源码。在mock的时候大部分用到的还是运行时的一些特性。之后觉得蛮好玩的，就根据OCMock的大致思路，自己写了一个小小的mock的类。&lt;br&gt;那么先来介绍一下什么是mock吧。&lt;br&gt;mock可以理解为纸老虎。当我们写单元测试的时候，不可避免的要去尽可能少的实例化一些具体的组件来保持测试既短又快。而且保持单元的隔离。在现代的面向对象系统中，测试的组件很可能会有几个依赖的对象。我们用mock来替代实例化具体的依赖class。mock是在测试中的一个伪造的有预定义行为的具体对象的替身对象。被测试的组件不知道其中的差异！你的组件是在一个更大的系统中被设计的，你可以很有信心的用mock来测试你的组件。&lt;br&gt;通过上面的文字其实已经能够说明，mock需要做的事情。一就是吧原有的类被一个mock的类替换掉，再者就是对于该类的方法，进行伪造。&lt;br&gt;在参考了OCMock的源码之后，发现需要完成这些操作，需要借鉴的主要是运行时的以下方法：&lt;br&gt;&lt;code&gt;object_setClass(&amp;lt;#id obj#&amp;gt;, &amp;lt;#__unsafe_unretained Class cls#&amp;gt;)&lt;/code&gt;&lt;br&gt;这个方法将一个对象设置为别的类,而返回值仍旧是返回原来的类别，具体看下下面的这段代码吧&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str = &lt;span class=&quot;string&quot;&gt;@&quot;hello&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Class class1 = object_setClass(str, [&lt;span class=&quot;built_in&quot;&gt;UIButton&lt;/span&gt; class]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在这段代码中实则的作用是将str从NSString类别转化为UIButton类别。而object_setClass的返回值class1还是NSString类别的。&lt;br&gt;这个方法看似很强大，实际上我认为没有多大的用处，我唯一能够想到的是在子类和父类的转化的时候估计可以用到一下。其他的倒还真是没有想到哪里可以用。&lt;br&gt;有了上面的这个方法，那么mock一个类可以轻轻松松的搞定了，当然mock一个类还远远不够，当然还需要mock这个类中的方法。对于mock一个类中的方法，主要用到的是消息转发的思想。在mock类中，执行之前没有的方法，那么重定向到一个已经存在的方法，通过一定的trick返回mock得到的值。这样就实现了整个mock的思路。&lt;br&gt;下面这段主要是在消息转发时候如何处理重定向到一个已经存在的方法：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)forwardInvocation:(&lt;span class=&quot;built_in&quot;&gt;NSInvocation&lt;/span&gt; *)anInvocation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; hasMoc = &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    SEL selector = anInvocation.selector;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *selectorName = &lt;span class=&quot;built_in&quot;&gt;NSStringFromSelector&lt;/span&gt;(selector);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *mocSelectorName &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.mocSelNameLists) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([mocSelectorName isEqualToString:selectorName]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            anInvocation.selector = &lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(getValueInMocMethod:);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [anInvocation setArgument:&amp;amp;mocSelectorName atIndex:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [anInvocation invokeWithTarget:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            hasMoc = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!hasMoc) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; forwardInvocation:anInvocation];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中先对需要方法进行筛选，如果是mock的方法，那么对其进行重定向。因为是需要重定向到一个新的方法，那么所以需要改变&lt;code&gt;NSInvocation&lt;/code&gt;类中的部分属性，主要是指向的方法和传递参数。这里需要注意的是&lt;code&gt;[anInvocation setArgument:&amp;amp;mocSelectorName atIndex:2];&lt;/code&gt;这边的index必须从2开始，因为0和1分别被targe和selector占用了。&lt;br&gt;以上介绍的就是mock的主要的思路处的实现了。虽然自己完成了一个mock的小demo，但是mock这个好像除了在测试的时候能够派上用场，在其他地方还想也没什么用武之地了。或者说只是我现在暂时还没有碰到或者想到而已。&lt;br&gt;不过虽然这么说，但是在研究mock的过程中，对于oc在运行时能够做的事情，有了更深一步的了解。&lt;br&gt;下面是自己写的demo的git地址：&lt;br&gt;&lt;a href=&quot;https://github.com/YYDD/MockDemo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/YYDD/MockDemo&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      关于ios中的mock的。。。
    
    </summary>
    
      <category term="blog" scheme="http://campusappcn.github.io/categories/blog/"/>
    
    
      <category term="ios" scheme="http://campusappcn.github.io/tags/ios/"/>
    
      <category term="mock" scheme="http://campusappcn.github.io/tags/mock/"/>
    
      <category term="运行时" scheme="http://campusappcn.github.io/tags/%E8%BF%90%E8%A1%8C%E6%97%B6/"/>
    
  </entry>
  
  <entry>
    <title>Android路由框架设计与实现</title>
    <link href="http://campusappcn.github.io/2016/03/23/2016-03-23-Android%E8%B7%AF%E7%94%B1%E6%A1%86%E6%9E%B6%E8%AE%BE%E8%AE%A1/"/>
    <id>http://campusappcn.github.io/2016/03/23/2016-03-23-Android路由框架设计/</id>
    <published>2016-03-22T16:00:00.000Z</published>
    <updated>2016-04-09T08:59:46.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;我们知道传统的网站开发框架一般支持用户设置路由表，如Django。而在Android开发中，我们打开页面的方式主要是startActivity()。使用startActivity()的缺点是需要打开的那个Activity的类已经存在，否则无法通过编译，但是在协同开发中，这往往是无法得到满足的。那么如何来解决这一问题呢，我们是否也能够像在Web开放中一样使用一个url来打开一个Activity呢？因此本文主要介绍在Android平台设计和实现一个路由框架。&lt;/p&gt;
&lt;h1 id=&quot;框架整体设计&quot;&gt;&lt;a href=&quot;#框架整体设计&quot; class=&quot;headerlink&quot; title=&quot;框架整体设计&quot;&gt;&lt;/a&gt;框架整体设计&lt;/h1&gt;&lt;p&gt;首先我们需要明确一点，那就是我们的框架不能仅仅局限于打开Activity，打开Activity只是框架中的一种行为实现，我们的框架应该是包含了Activity以及其它比较常用的路由。并支持使用者自己添加自己的路由实现的，如使用者希望使用url调用一个方法，或者调用一个Runnable，那么他就可以自己实现一个Router来支持这种行为。基于这样的思路，路由框架的整体架构设计如下。&lt;br&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i2/754328530/TB2XFdcepXXXXX5XXXXXXXXXXXX-754328530.jpg&quot; alt=&quot;路由框架设计&quot;&gt;&lt;/p&gt;
&lt;p&gt;在以上框架中，由RouterManager维护所有的IRouter列表。我们的框架自身实现了打开Activity的ActivityRouter。同时用户可以添加自己的IRouter实现。当用户想要打开某个url时，调用RouterManager的open()方法，RouterManager遍历列表，调用IRouter的canOpenTheUrl方法找到第一个能够打开该url的IRouter，并将该open的任务dispatch给该Router。&lt;br&gt;但是在分析实际使用情景中，我们发现这样的框架设计并不能满足实际使用需求，主要有如下几点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在打开Activity可能需要设置动画。&lt;/li&gt;
&lt;li&gt;需要选择使用startActivityForResult()来打开Activity。&lt;/li&gt;
&lt;li&gt;需要传递一些无法放到url中的传递参数，如Parcelable等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;虽然这仅仅是ActivityRouter的需求，但我们也需要让我们的框架支持这些。&lt;br&gt;因此，我们对以上框架设计做了一些修改如下。&lt;br&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i1/754328530/TB20x_2epXXXXapXpXXXXXXXXXX-754328530.jpg&quot; alt=&quot;路由框架设计修改版&quot;&gt;&lt;br&gt;用户在需要额外设置一些参数的时候可以不选择使用open打开url，而是使用getRoute()方法获得抽象的Route对象，通过Route对象进行额外的设置，最后可以通过IRoute接口的open方法打开它自己。IRouter和IRoute的关系应该是一对一或者一对多，一种IRouter应该可以打开一或者多种不同IRoute。而一个IRoute则一般只能由一种IRouter打开。&lt;/p&gt;
&lt;h1 id=&quot;路由格式&quot;&gt;&lt;a href=&quot;#路由格式&quot; class=&quot;headerlink&quot; title=&quot;路由格式&quot;&gt;&lt;/a&gt;路由格式&lt;/h1&gt;&lt;p&gt;在路由框架中，url应该包含两点功能，一是唯一确定一条路由，二是提供一些参数。我们可以以一个路由的例子来讲解ActivityRouter的路由规则。本规则参考了REST。&lt;br&gt;例：activity://main/:i{key1}/path1/:f{key2}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scheme为activity代表该url可以被ActivityRouter打开。&lt;/li&gt;
&lt;li&gt;host为main一般表示决定的Activity。&lt;/li&gt;
&lt;li&gt;而:{key1}则表示一个值的key，这个path segment在url中会被具体的值替换，:后面的i表示该key对应的值的类型为int型。&lt;/li&gt;
&lt;li&gt;path1为固定的path segment，与上面的key用来传递值不同。用来区分路由，与host功能类似。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此一个url与路由匹配需要scheme，host以及path中的固定部分相同，而key部分被具体的值代替。以下举一个匹配上面的路由的url的例子。&lt;br&gt;activity:main/123/path1/12.4。则会调用intent的putExtra()方法将key1=123, key2=12.4放到intent的bundle中。在被跳的Activity中就可以获取对应的值。如果有些值是不必须的，已可以放到query parameter中。如activity://main/123/path1?des=hello。但query parameter不影响路由匹配。&lt;br&gt;以上只是我实现的ActivityRouter的路由格式，如果你需要实现自己的路由，完全可以根据自己的想法设计路由格式。&lt;/p&gt;
&lt;h3 id=&quot;路由表的初始化&quot;&gt;&lt;a href=&quot;#路由表的初始化&quot; class=&quot;headerlink&quot; title=&quot;路由表的初始化&quot;&gt;&lt;/a&gt;路由表的初始化&lt;/h3&gt;&lt;p&gt;Router需要提供一个方法让使用者初始化路由表。如下ActivityRouter的实现，当然这并不必要，如打开网页的Router就不需要路由表，只需要调用系统浏览器打开网页即可。所以该方法没有在接口中定义。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context appContext, IActivityRouteTableInitializer initializer)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       mBaseContext = appContext;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       initializer.initRouterTable(mRouteTable);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;IActivityRouteTableInitializer&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * init the router table&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; router the router map to&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;initRouterTable&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Map&amp;lt;String, Class&amp;lt;? extends Activity&amp;gt;&amp;gt; router)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h1&gt;&lt;p&gt;我们发现将原本startActivity方式替换成路由方式后，有以下几个明显的优点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;便于协同开发&lt;/li&gt;
&lt;li&gt;便于测试，可以在测试中替换一个路由表，打开测试用Activity。&lt;/li&gt;
&lt;li&gt;便于从外部链接跳转到app中的任意界面。我们只需要设置一个外链入口Activity，让其接收外部链接，并调用路由管理器打开该链接即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;项目地址&quot;&gt;&lt;a href=&quot;#项目地址&quot; class=&quot;headerlink&quot; title=&quot;项目地址&quot;&gt;&lt;/a&gt;项目地址&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/campusappcn/AndRouter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/campusappcn/AndRouter&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      本篇文章主要介绍AndRouter，基于Android的路由框架。
    
    </summary>
    
      <category term="blog" scheme="http://campusappcn.github.io/categories/blog/"/>
    
    
      <category term="Development" scheme="http://campusappcn.github.io/tags/Development/"/>
    
      <category term="Android" scheme="http://campusappcn.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>mysql使用binlog恢复数据</title>
    <link href="http://campusappcn.github.io/2016/03/22/2016-03-22-mysql%E4%BD%BF%E7%94%A8binlog%E6%81%A2%E5%A4%8D%E6%95%B0%E6%8D%AE/"/>
    <id>http://campusappcn.github.io/2016/03/22/2016-03-22-mysql使用binlog恢复数据/</id>
    <published>2016-03-21T16:00:00.000Z</published>
    <updated>2016-04-09T08:59:46.000Z</updated>
    
    <content type="html">&lt;p&gt;当mysql因为某些原因数据丢失时，可以使用binlog来恢复数据。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;本文基于mysql5.6，主要记录一些binlog相关的内容。&lt;/p&gt;
&lt;h3 id=&quot;binlog&quot;&gt;&lt;a href=&quot;#binlog&quot; class=&quot;headerlink&quot; title=&quot;binlog&quot;&gt;&lt;/a&gt;binlog&lt;/h3&gt;&lt;p&gt;首先介绍mysql的binlog&lt;br&gt;binlog是binary log的缩写，是mysql记录数据库变动的二进制日志，会包含所有使数据和表结构发生变化的事件。根据官方文档，mysql的binary log主要有两个目的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、实现复制集：replication中的master通过binary log记录数据变动然后发送给slave；&lt;br&gt;2、恢复数据。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以通过配置 &lt;code&gt;--log-bin[=base_name]&lt;/code&gt;变量启动mysql server以启用binlog。&lt;br&gt;可以通过&lt;code&gt;--binlog-format={ROW|STATEMENT|MIXED}&lt;/code&gt;来指定mysql使用哪种binlog格式：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、statement-based格式的binlog下，replication中的slave通过执行master的binlog中的sql与master同步，这样的副本集也叫SBR(statement-based replication)。statement日志会记录sql、服务器信息、sql执行时间戳、sql执行时长等等信息；&lt;br&gt;2、row-based格式的binlog下，master会把数据每一列的改动前后都记录下来，slave复制这些改动来同步master，这样的副本集叫做RBR(row-based replication)；&lt;br&gt;3、mixed-based格式的binlog默认采用statement-based，只有在某些情况下会自动切换到row-based格式。&lt;br&gt;可以看出，row-based binlog的特点十分适合用于数据恢复与增量备份。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;mysqlbinlog&quot;&gt;&lt;a href=&quot;#mysqlbinlog&quot; class=&quot;headerlink&quot; title=&quot;mysqlbinlog&quot;&gt;&lt;/a&gt;mysqlbinlog&lt;/h3&gt;&lt;p&gt;mysqlbinlog是mysql自带的binlog工具，可以直接将binlog用于数据恢复。&lt;br&gt;&lt;strong&gt;将log_file的变动应用到远程mysql：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;shell&amp;gt; mysqlbinlog log_file | mysql -h server_name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;将数据恢复到某个时间点：&lt;/strong&gt;&lt;br&gt;假设要恢复数据的mysql开启了binlog并且有一个A时间点的备份，现在要把数据恢复到发生了数据丢失的B时间点前。那么就可以在A时间点的备份上应用A-B区间的binlog，得到一个B时间点前数据集。&lt;br&gt;具体操作可以用到以下命令：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;shell&amp;gt; mysqlbinlog --start-datetime=&amp;quot;2005-04-20 9:55:00&amp;quot; --stop-datetime=&amp;quot;2005-04-20 10:05:00&amp;quot;  /var/log/mysql/bin.123456 | mysql -u root -p&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;同理还可以使用&lt;code&gt;--start-positon&lt;/code&gt;、&lt;code&gt;--stop-position&lt;/code&gt;达到同样目的。&lt;br&gt;可以看出这里的binlog其实也起着增量备份数据的作用。阿里云rds所实现的创建一个有效期内任意时间点的rds实例应该就是用了类似上面的方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导出数据变动到文件：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysqlbinlog binlog_files.000001 &amp;gt; tmpfile //覆盖&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysqlbinlog binlog_files.000002 &amp;gt;&amp;gt; tmpfile //追加&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;导出的文件同样可以直接应用到mysql&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql -u root -p &amp;lt; tmpfile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导出可读的binlog：&lt;/strong&gt;&lt;br&gt;binlog是二进制日志，直接用mysqlbinlog binlog_file命令导出的日志是base64编码过的。&lt;br&gt;对于row格式的binlog可以用 &lt;code&gt;-versbose(-v)&lt;/code&gt;和&lt;code&gt;--base64-output=DECODE-ROWS&lt;/code&gt;将binlog输出为可读的sql伪码，这些伪码会记录下每次数据操作造成的列改动：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;shell&amp;gt; mysqlbinlog -v --base64-output=DECODE-ROWS log_file&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# at 218&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#080828 15:03:08 server id 1  end_log_pos 258   Write_rows: table id 17 flags: STMT_END_F&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;### INSERT INTO test.t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;### SET&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;###   @1=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;###   @2=&amp;apos;apple&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;###   @3=NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# at 302&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#080828 15:03:08 server id 1  end_log_pos 356   Update_rows: table id 17 flags: STMT_END_F&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;### UPDATE test.t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;### WHERE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;###   @1=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;###   @2=&amp;apos;apple&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;###   @3=NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;### SET&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;###   @1=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;###   @2=&amp;apos;pear&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;###   @3=&amp;apos;2009:01:01&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# at 400&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#080828 15:03:08 server id 1  end_log_pos 442   Delete_rows: table id 17 flags: STMT_END_F&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;### DELETE FROM test.t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;### WHERE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;###   @1=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;###   @2=&amp;apos;pear&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;###   @3=&amp;apos;2009:01:01&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;mysql-server-logs&quot;&gt;&lt;a href=&quot;#mysql-server-logs&quot; class=&quot;headerlink&quot; title=&quot;mysql server logs&quot;&gt;&lt;/a&gt;mysql server logs&lt;/h3&gt;&lt;p&gt;除了用于复制集和恢复数据的binlog，mysql还提供了以下日志&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Log Type&lt;/th&gt;
&lt;th&gt;Information Written to Log&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Error log&lt;/td&gt;
&lt;td&gt;Problems encountered starting, running, or stopping mysqld&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;General query log&lt;/td&gt;
&lt;td&gt;Established client connections and statements received from clients&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Binary log&lt;/td&gt;
&lt;td&gt;Statements that change data (also used for replication)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Relay log&lt;/td&gt;
&lt;td&gt;Data changes received from a replication master server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Slow query log&lt;/td&gt;
&lt;td&gt;Queries that took more than long_query_time seconds to execute&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DDL log&lt;/td&gt;
&lt;td&gt;(metadata log)    Metadata operations performed by DDL statements&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;小结&quot;&gt;&lt;a href=&quot;#小结&quot; class=&quot;headerlink&quot; title=&quot;小结&quot;&gt;&lt;/a&gt;小结&lt;/h3&gt;&lt;p&gt;为了保证数据可恢复性，mysql官方文档提出了一些备份恢复的建议：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、永远开启&lt;code&gt;--log-bin&lt;/code&gt;运行mysql server&lt;br&gt;2、定时使用&lt;code&gt;mysqldump&lt;/code&gt;全量备份&lt;br&gt;3、定时使用&lt;code&gt;mysqladmin flush-logs [log_type ...]&lt;/code&gt; 增量备份&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以看到，阿里云的一系列备份恢复措施正是这些建议的实践。&lt;/p&gt;
&lt;p&gt;为了应对一些突发状况造成的数据丢失，备份与恢复机制是数据基础建设必不可少的一环。&lt;br&gt;对应mysql来说，开启row-based的binlog并且定时备份数据是一个实用的方案。&lt;br&gt;但是在不可避免的意外造成的数据丢失之外还需要警惕的是某些人为误操作引起的数据丢失——在直接操作线上数据时要慎之又慎，尤其对于批量数据的修改最好要先dump或复制一份数据再操作。&lt;/p&gt;
&lt;p&gt;参考文档：&lt;br&gt;&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.6/en/binary-log.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;binary-log&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.6/en/mysqlbinlog.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mysqlbinlog&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;当mysql因为某些原因数据丢失时，可以使用binlog来恢复数据。&lt;br&gt;
    
    </summary>
    
      <category term="blog" scheme="http://campusappcn.github.io/categories/blog/"/>
    
    
      <category term="Mysql" scheme="http://campusappcn.github.io/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>Android实现多次闪退清除数据</title>
    <link href="http://campusappcn.github.io/2016/03/22/2016-03-22-Android%E5%AE%9E%E7%8E%B0%E5%A4%9A%E6%AC%A1%E9%97%AA%E9%80%80%E6%B8%85%E9%99%A4%E6%95%B0%E6%8D%AE/"/>
    <id>http://campusappcn.github.io/2016/03/22/2016-03-22-Android实现多次闪退清除数据/</id>
    <published>2016-03-21T16:00:00.000Z</published>
    <updated>2016-04-09T08:59:46.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;很多时候由于后台返回的数据异常，可能会导致App闪退。而如果这些异常数据被App本地缓存下来，那么即使杀掉进程重新进入还是会发生闪退。唯一的解决方法就是清除App数据，但是用户可能没有这个意识或者嫌麻烦就直接不再使用了，这是我们无法接受的。在使用淘宝、追书神器等App时我发现有时候它们也会连续闪退，但是往往闪退三次后就恢复正常了，所以一般成熟的App都会做连续闪退三次后清除缓存数据的工作。而目前笔者搜不到有哪篇blog来讲这方面的事情，所以就姑且由我来讲讲此事，为希望提高App用户体验的朋友提供些许参考。&lt;/p&gt;
&lt;h1 id=&quot;ACRA&quot;&gt;&lt;a href=&quot;#ACRA&quot; class=&quot;headerlink&quot; title=&quot;ACRA&quot;&gt;&lt;/a&gt;ACRA&lt;/h1&gt;&lt;p&gt;为了能够在闪退的时候做一些事情，我们可以使用ACRA，这是Github上的一个开源项目，允许使用者设置一些Sender在App闪退的时候做一些事情。具体使用可以直接参考&lt;a href=&quot;https://github.com/ACRA/acra&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;实现清除数据&quot;&gt;&lt;a href=&quot;#实现清除数据&quot; class=&quot;headerlink&quot; title=&quot;实现清除数据&quot;&gt;&lt;/a&gt;实现清除数据&lt;/h1&gt;&lt;p&gt;ACRA提供了自己的一些Sender，如使用系统邮件客户端向指定邮箱发送邮件的EmailIntentSender。而我们希望记录闪退次数和清除数据则需要implements ReportSender接口。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CrashHandler&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ReportSender&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context, CrashReportData errorContent)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; ReportSenderException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Timber.i(&lt;span class=&quot;string&quot;&gt;&quot;闪退,检查是否需要清空数据&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CrashModel().checkAndClearData();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里我们写了一个CrashModel用来记录闪退次数和时间决定是否需要清空数据，具体代码如下。&lt;br&gt;由于在ReportSender的时候无法打开其它线程，所以我们无法使用SharedPerferences来清理数据（打开SP的时候其实打开了一个新线程）。为此需要找到数据缓存的位置并将文件删除。同样道理，记录闪退时间也只能通过文件记录。当然，你可以选择一些文件不进行删除，如用户信息等不太容易出问题的数据。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CrashModel&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String KEY_CRASH_TIMES = &lt;span class=&quot;string&quot;&gt;&quot;crash_times&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String CRASH_TIME_FILE_NAME = &lt;span class=&quot;string&quot;&gt;&quot;crash_time&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//不能通过App.getPackageName来获取包名，否则会有问题，只能默认为cn.campusapp.campus。所以对于debug或者运营版本，清数据会把release的清掉&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String FILE_DIR = String.format(&lt;span class=&quot;string&quot;&gt;&quot;/data/data/%s/&quot;&lt;/span&gt;, BuildConfig.APPLICATION_ID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String ACCOUNT_FILE_NAME = String.format(&lt;span class=&quot;string&quot;&gt;&quot;%s%s&quot;&lt;/span&gt;, FILE_DIR, &lt;span class=&quot;string&quot;&gt;&quot;shared_prefs/account_pref.xml&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; ArrayList&amp;lt;String&amp;gt; FILES_DONTNEED_DELETE = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();  &lt;span class=&quot;comment&quot;&gt;//该目录中的文件不会被删除&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FILES_DONTNEED_DELETE.add(ACCOUNT_FILE_NAME);  &lt;span class=&quot;comment&quot;&gt;//目前账号信息文件不会被删除，但是会手动改变数据，只保留userId  accessToken 和school&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; ArrayList&amp;lt;Long&amp;gt; mCrashTimes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Gson gson = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Gson();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; File mFileDir;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CrashModel&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFileDir = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(FILE_DIR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCrashTimes = readCrashTimes();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCrashTimes == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCrashTimes = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            storeCrashTimes(mCrashTimes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;checkAndClearData&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; timeNow = System.currentTimeMillis();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (checkClearData(timeNow, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;(mCrashTimes))) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Timber.i(&lt;span class=&quot;string&quot;&gt;&quot;已经在5分钟之内有三次闪退，需要清理数据&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                clearData();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Timber.e(e, &lt;span class=&quot;string&quot;&gt;&quot;清空所有数据失败&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCrashTimes.add(timeNow);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            storeCrashTimes(mCrashTimes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Timber.i(&lt;span class=&quot;string&quot;&gt;&quot;此次不需要清空数据, %s&quot;&lt;/span&gt;, gson.toJson(mCrashTimes));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;storeCrashTimes&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ArrayList&amp;lt;Long&amp;gt; crashTimes)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            String str = gson.toJson(crashTimes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Files.writeToFile(mFileDir, CRASH_TIME_FILE_NAME, str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Timber.e(e, &lt;span class=&quot;string&quot;&gt;&quot;保存闪退时间失败&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; ArrayList&amp;lt;Long&amp;gt; &lt;span class=&quot;title&quot;&gt;readCrashTimes&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            String timeStr = Files.readFileContent(mFileDir, CRASH_TIME_FILE_NAME);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; gson.fromJson(timeStr, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TypeToken&amp;lt;ArrayList&amp;lt;Long&amp;gt;&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;.getType());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Timber.e(e, &lt;span class=&quot;string&quot;&gt;&quot;读取闪退时间失败&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * 检查是否需要清空数据，目前的清空策略是在5分钟之内有三次闪退的就清空数据，也就是从后往前遍历，只要前两次闪退发生在5分钟之内，就清空数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;checkClearData&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; time, ArrayList&amp;lt;Long&amp;gt; crashTimes)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Timber.i(gson.toJson(crashTimes));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; count = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = crashTimes.size() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i--) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; crashTime = crashTimes.get(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (time - crashTime &amp;lt;= &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (count &amp;gt;= &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (count &amp;gt;= &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//在5分钟之内有三次闪退，这时候需要清空数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * 清空数据，包括数据库中的和SharedPreferences中的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@throws&lt;/span&gt; Exception&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;clearData&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Timber.i(&lt;span class=&quot;string&quot;&gt;&quot;开始清理数据&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Files.deleteFilesExceptSomeInDirectory(mFileDir, FILES_DONTNEED_DELETE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后我们需要将CrashHandler 添加到ACRA的异常处理Sender列表中。在你的Application类中添加如下代码。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@ReportsCrashes&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		  &lt;span class=&quot;comment&quot;&gt;//一些ACRA的设置，具体参考ACRA文档，因为我们使用自定义Sender，所以这里完全可以不用设置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//mailTo = &quot;bugs@treeholeapp.cn&quot;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//mode = ReportingInteractionMode.TOAST,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//resToastText = R.string.crash_toast_text&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Application&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!BuildConfig.DEBUG) &amp;#123;  &lt;span class=&quot;comment&quot;&gt;//这里我判断只有在非DEBUG下才清除数据，主要是为了在开发过程中能够保留线程。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ACRA.init(APPLICATION_CONTEXT);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                CrashHandler handler = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CrashHandler();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              	ACRA.getErrorReporter().setReportSender(handler);  &lt;span class=&quot;comment&quot;&gt;//在闪退时检查是否要清空数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h1&gt;&lt;p&gt;以上即为实现多次闪退后清除数据的实现，希望大家开发的App Bug越来越少，鲁棒性越来越强。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      本篇文章主要说明如何在Android App多次闪退后清除数据
    
    </summary>
    
      <category term="blog" scheme="http://campusappcn.github.io/categories/blog/"/>
    
    
      <category term="Development" scheme="http://campusappcn.github.io/tags/Development/"/>
    
      <category term="Android" scheme="http://campusappcn.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Getting Started | Pan</title>
    <link href="http://campusappcn.github.io/2016/03/21/2016-03-21-Getting%20Started%20%7C%20Pan/"/>
    <id>http://campusappcn.github.io/2016/03/21/2016-03-21-Getting Started | Pan/</id>
    <published>2016-03-20T16:00:00.000Z</published>
    <updated>2016-04-09T08:59:46.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/campusappcn/Pan&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pan (https://github.com/campusappcn/Pan)&lt;/a&gt;框架使用起来很简单。采用&lt;a href=&quot;https://github.com/campusappcn/Pan&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pan&lt;/a&gt;来编写界面和控制代码，可以和原有的代码完全兼容、并存。&lt;/p&gt;
&lt;p&gt;首先，是轻量化的Activity代码，主要通过Pan的工厂方法with，得到ViewModel的实例，绑定ViewModel和Controller到Activity上。工厂方法with有很多重载，也可以传入使用实例化好的对象。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PanFragmentActivity&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MainViewModel mMainViewModel;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setContentView(R.layout.activity_main);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMainViewModel = Pan.with(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, MainViewModel.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .controlledBy(MainController.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .getViewModel()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .setHelloString(&lt;span class=&quot;string&quot;&gt;&quot;hello Pan!&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .render();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;How clean! 事实上，常见的Activity中需要实现的onResume等方法，也无需写在这里，可以完全交给Controller。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;接下来编写具体ViewModel实现类。ViewModel主要完成渲染逻辑，因此ViewModel的成员变量包含两种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;以v作为前缀的View对象&lt;/li&gt;
&lt;li&gt;以m作为前缀的ViewModel具体的字段&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;render方法负责将ViewModel字段渲染到View上&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Xml&lt;/span&gt;(R.layout.activity_main) &lt;span class=&quot;comment&quot;&gt;//可选，让ViewModel语义更明确。当需要自己实例化新View时必选。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainViewModel&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GeneralViewModel&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Bind&lt;/span&gt;(R.id.hello) &lt;span class=&quot;comment&quot;&gt;//Butterknife&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Button vHelloTv;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String mHelloString;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; MainViewModel &lt;span class=&quot;title&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        vHelloTv.setText(mHelloString);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; MainViewModel &lt;span class=&quot;title&quot;&gt;setHelloString&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String string)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mHelloString = string;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其次，是Controller实现类。当然一个View不必要有Controller，如果不需要监听任何事件的话。&lt;br&gt;Controller通过泛型参数，与ViewModel实现绑定，可以处理两类事件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用户交互，通过bindEvents()方法实现，$vm为绑定的ViewModel对象&lt;/li&gt;
&lt;li&gt;所处Activity/Fragment的生命周期，通过实现接口（例如，OnResume）进行监听&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainController&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GeneralController&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;MainViewModel&lt;/span&gt;&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;OnResume&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;//以监听Activity的OnResume事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bindEvents&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $vm.vHelloTv.setOnClickListener(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; View.OnClickListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View v)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Toast.makeText(getActivity(), $vm.mHelloString, Toast.LENGTH_SHORT).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onResume&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Log.d(&lt;span class=&quot;string&quot;&gt;&quot;MainController&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;On Resume For &quot;&lt;/span&gt; + getActivity());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对应的布局XML:&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;LinearLayout&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;xmlns:android&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;attr&quot;&gt;android:orientation&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;vertical&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Button&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;android:id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@+id/hello&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;android:text&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;LinearLayout&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;添加Pan的依赖：&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;repositories &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//jitpack repository&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	maven &amp;#123; url &lt;span class=&quot;string&quot;&gt;&quot;https://jitpack.io&quot;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dependencies &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       compile &lt;span class=&quot;string&quot;&gt;&#39;com.github.campusappcn:Pan:0.2.2&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/campusappcn/Pan&quot;&gt;Pan (https://github.com/campusappcn/Pan)&lt;/a&gt;框架使用起来很简单。采用&lt;a href=&quot;https://github.com/campusappcn/Pan&quot;&gt;Pan&lt;/a&gt;来编写界面和控制代码，可以和原有的代码完全兼容、并存。&lt;/p&gt;
&lt;p&gt;首先，是轻量化的Activity代码，主要通过Pan的工厂方法with，得到ViewModel的实例，绑定ViewModel和Controller到Activity上。工厂方法with有很多重载，也可以传入使用实例化好的对象。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PanFragmentActivity&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MainViewModel mMainViewModel;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setContentView(R.layout.activity_main);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMainViewModel = Pan.with(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, MainViewModel.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .controlledBy(MainController.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .getViewModel()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .setHelloString(&lt;span class=&quot;string&quot;&gt;&quot;hello Pan!&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .render();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;How clean! 事实上，常见的Activity中需要实现的onResume等方法，也无需写在这里，可以完全交给Controller。&lt;/p&gt;
    
    </summary>
    
      <category term="blog" scheme="http://campusappcn.github.io/categories/blog/"/>
    
    
      <category term="Android" scheme="http://campusappcn.github.io/tags/Android/"/>
    
      <category term="MVC" scheme="http://campusappcn.github.io/tags/MVC/"/>
    
      <category term="MVVM" scheme="http://campusappcn.github.io/tags/MVVM/"/>
    
      <category term="MVP" scheme="http://campusappcn.github.io/tags/MVP/"/>
    
      <category term="Pan" scheme="http://campusappcn.github.io/tags/Pan/"/>
    
  </entry>
  
  <entry>
    <title>移动应用开发的安全性问题</title>
    <link href="http://campusappcn.github.io/2016/03/20/%E7%A7%BB%E5%8A%A8%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E7%9A%84%E5%AE%89%E5%85%A8%E6%80%A7%E9%97%AE%E9%A2%98/"/>
    <id>http://campusappcn.github.io/2016/03/20/移动应用开发的安全性问题/</id>
    <published>2016-03-19T16:00:00.000Z</published>
    <updated>2016-03-20T09:02:24.000Z</updated>
    
    <content type="html">&lt;p&gt;昨天去“云栖小镇”听了一场关于《初创期间的App和服务端安全探讨》的分享会。本来是抱着很大的期望去的。因为毕竟我们的app还没达到一定的高度，所以对于安全性的考虑有时候会比较少，这方面相对来说涉及到的就不多，然而真的是应验了“希望越大，失望越大。”这句老古话。在分享会上，听到了各种的广告。虽然广告量很大。但是还有有一些小启发的。&lt;/p&gt;
&lt;p&gt;记得对我印象最深的一点是，是分享会上的一个嘉宾他自己开发的一个自测工具。具体叫什么，我不知道。然而我们也没法体验。不过他说现在已经在走阿里的开源流程中，相信过段时间我们也能够用上这款iOS上的自测工具。而安卓的他也在计划中。而通过他对于这款工具的介绍，我了解到了我们的app是多么的不安全。对于这款工具，他列举了这么几点：辅助iOS应用审计、辅助iOS逆向分析、安全小白可迅速上手、提高安全审计效率、目前拥有57个功能。&lt;/p&gt;
&lt;p&gt;期间他给我们介绍了，通过这款工具，能够很便捷的对市场上的大部分app进行逆向分析，直接拿到app中所有的头文件，以及每个头文件中的相应的方法。我相信拿到这些方法后，就能做一些简单的hack了。而且这款工具还提供了重签名打包的功能。虽然说这个工具功能很强大，对于它的开源还是有些小期待的。但是如果他开源了，面向了所有的开发者，那么也就是说我们的app对于更多的人是裸露的。这想起来还是有一点小恐怖的。特别是对于初创公司的应用。一般情况下，初创公司希望做的是更快的完成需求，去验证需求的可行性。也许对于安全性考虑的就没这么周全。&lt;/p&gt;
&lt;p&gt;不过这里想要安利一款产品，当然也是昨天的分享会上被安利的。这款产品就是“阿里聚安全”。应该是有自动化的检测和人工的检测。也就是说能够通过他们产品帮我们的app做自动化的扫描，找出一般的安全性问题，还有功能是阿里的安全专家会手动的对app做安全检查，当然他们还提供了sdk，方便保存密码等敏感信息。&lt;br&gt;前面说的都是昨天分享会上得到的讯息。&lt;/p&gt;
&lt;p&gt;那么下面我发表一下自己对于应用应用安全性问题的想法吧。&lt;/p&gt;
&lt;p&gt;我记得之前的我参与过的一个项目中碰到这样一个问题。比如说app中有关注的需求。而这个实现用的是http请求。当时协议是这样的只告诉服务端，我是谁，以及我要关注的那个用户是谁。就这个需求。当时被攻击了，他拿到一组用户id之后，疯狂的发请求让别人关注自己，然后自己更新信息来做广告。相信这种类似的需求在很多场景下都会存在。当时我们采取的措施是，在每次http请求的时候带上一个动态的验证信息。如果验证信息非法那么就抛弃掉当前的请求。&lt;/p&gt;
&lt;p&gt;还有如果有app中有长连接需求的，可以把长连接的ip地址通过短连接中的某个请求中返回，这样可以理想化的做到不同的长连接的地址有可能是不同的。防止一些非法的连接。而且同时也能够做到动态的切换。&lt;/p&gt;
&lt;p&gt;还有一点是通过“验证码”、“图片识别”等需求延伸出来受到的启发。我相信基本上的app中都会有统计的，如果把统计的数据来验证本次请求是否合法，这何尝不是一种解决方法。比如说注册用户的请求，服务端收到注册的请求，那么这时候判断下当前的设备是否有关于注册方面的统计事件，如果有那么ok，这个在这个层面上可以理解为是合法的请求。反之如果没有，那么可以理解为是非法的请求。&lt;/p&gt;
&lt;p&gt;当然最好的是用https替代http，本身苹果就是鼓励代价请求都用https的。还有就是存在本地的敏感数据全部加密，哪怕是用最简单的md5加密，也胜过明文。如果涉及到消费类的需求的，所有的数据能够通过服务端来判断就通过服务端来判断。&lt;/p&gt;
&lt;p&gt;总结下：虽然说，防御的手段有很多。但是所有的防御都只是提高了被破解，被攻击的门槛而已。所以app的安全性永远是一个不断提高的点。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      对于移动应用的安全性问题的一些见解
    
    </summary>
    
      <category term="blog" scheme="http://campusappcn.github.io/categories/blog/"/>
    
    
      <category term="安全" scheme="http://campusappcn.github.io/tags/%E5%AE%89%E5%85%A8/"/>
    
      <category term="黑客" scheme="http://campusappcn.github.io/tags/%E9%BB%91%E5%AE%A2/"/>
    
      <category term="攻击" scheme="http://campusappcn.github.io/tags/%E6%94%BB%E5%87%BB/"/>
    
  </entry>
  
  <entry>
    <title>Pan的简介和设计思路</title>
    <link href="http://campusappcn.github.io/2016/03/18/2016-03-18-Pan%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E8%AE%BE%E8%AE%A1%E6%80%9D%E8%B7%AF/"/>
    <id>http://campusappcn.github.io/2016/03/18/2016-03-18-Pan的简介和设计思路/</id>
    <published>2016-03-17T16:00:00.000Z</published>
    <updated>2016-03-20T09:06:36.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/campusappcn/Pan&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pan&lt;/a&gt;是一个我在2015年中开始设计并实现的一个安卓端的MV*框架，经过大量的实践和修正，现在的Pan已经十分稳定，成为项目中的核心框架。时至今日，安卓端的MVVM和MVP类型的框架也有一些，但和2015年相比，该有的问题依然存在，而Pan框架的设计思路，也仍然能够超越这些框架，在达到目的的同时，更方便开发者的上手和使用。&lt;/p&gt;
&lt;h2 id=&quot;臃肿的Activity和Fragment&quot;&gt;&lt;a href=&quot;#臃肿的Activity和Fragment&quot; class=&quot;headerlink&quot; title=&quot;臃肿的Activity和Fragment&quot;&gt;&lt;/a&gt;臃肿的Activity和Fragment&lt;/h2&gt;&lt;p&gt;相信写安卓的人都深有体会，Activity里面一不小心就会有上千行的代码。安卓的MVC设计，Activity本身承担部分Controller的角色；而View的角色由View类型和XML来承担，同时View类型的EventListener由会承担部分的Controller角色；Model交给开发者自由选择。而一旦到真实的实践中，Activity或者Fragment往往会承担大量的代码，主要包含：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;页面的生命周期管理，e.g. onStop&lt;/li&gt;
&lt;li&gt;View的渲染细节控制，e.g. 例如setText&lt;/li&gt;
&lt;li&gt;用户交互事件的绑定，e.g. 例如setOnClickListener&lt;/li&gt;
&lt;li&gt;异步网络请求&lt;/li&gt;
&lt;li&gt;Fragment生命周期管理&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;简单的页面或许没什么问题，一旦业务逻辑复杂，Activity到后期基本无法维护，因为要做的事情太多了。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;或许你会认为，这是程序员代码能力差导致的。考虑到实际情况，团队中的人也许并不是你能选择的，或者团队成员彼此无法认同对方的编码思路，最终的结果仍然是bad ending。&lt;/p&gt;
&lt;h2 id=&quot;MVP-难以上手的mortar，解耦不彻底的nucleus和Data-binding语法糖&quot;&gt;&lt;a href=&quot;#MVP-难以上手的mortar，解耦不彻底的nucleus和Data-binding语法糖&quot; class=&quot;headerlink&quot; title=&quot;MVP: 难以上手的mortar，解耦不彻底的nucleus和Data-binding语法糖&quot;&gt;&lt;/a&gt;MVP: 难以上手的&lt;a href=&quot;https://github.com/square/mortar&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mortar&lt;/a&gt;，解耦不彻底的&lt;a href=&quot;https://github.com/konmik/nucleus&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nucleus&lt;/a&gt;和&lt;a href=&quot;https://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=1&amp;amp;cad=rja&amp;amp;uact=8&amp;amp;ved=0ahUKEwj1xY_7icrLAhUsnoMKHVbaCEIQFggcMAA&amp;amp;url=http%3A%2F%2Fdeveloper.android.com%2Ftools%2Fdata-binding%2Fguide.html&amp;amp;usg=AFQjCNH-v4_t0AHIBOQYWBUL_p85OAupyg&amp;amp;sig2=2xv9qnfsbku8FWvKjct6GQ&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Data-binding&lt;/a&gt;语法糖&lt;/h2&gt;&lt;p&gt;说起MVP框架，首先可能想到的就是square的mortar。mortar很早就写出来了，搭配自家的依赖注入Dagger和Flow。mortar里面很多设计理念很先进，例如通过view组织界面而不是Activity/Fragment，彻底分离View、Presenter、Screen、Activty/Fragment、model层的请求，成功的将整个程序拆成了多种单元，通过依赖注入粘合在一起。这也同样造成了他流行不起来，因为想要mortar，就得把square家族大礼包全部都加进来，彻底的认同一整套square的思维方式，锁定技术栈。学习成本和定制成本都很高。&lt;/p&gt;
&lt;p&gt;nucleus是一个轻量级的MVP框架，轻量到……Activity里还是有很多代码，nucleus只把Presenter分离出来，但同时Presenter是与Activity绑定的，这让Presenter的可复用性大大下降，例如一个界面上，局部的Presenter完全可以用到别的Activity/Fragment上的，所以必须要将Presenter和Activity解耦。在实际的编码过程中，ListView或者RecyclerView中Item都是一个可以独立看待的部件，且可能会在其他的非ListView环境中使用。这意味着和Activity绑定后很多内容的复用还得自己想办法。而且nucleus并不管事件跳转，还是写在Activity里，所以Activity还是会臃肿。&lt;/p&gt;
&lt;p&gt;官方Data-binding本身只是个setText的语法糖，只把上面提到的View的渲染细节控制解决了一下，而且一定无法彻底解决，逻辑一复杂，还是得用java。&lt;/p&gt;
&lt;h2 id=&quot;Pan的设计目标&quot;&gt;&lt;a href=&quot;#Pan的设计目标&quot; class=&quot;headerlink&quot; title=&quot;Pan的设计目标&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/campusappcn/Pan&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pan&lt;/a&gt;的设计目标&lt;/h2&gt;&lt;p&gt;Pan的设计初衷，就是要给Activity瘦身，最好保持在100行以下，甚至50行以下。综合考虑，还有下面这些目标：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;兼容性，可以和不使用Pan框架的代码兼容，支持逐步重构&lt;/li&gt;
&lt;li&gt;解耦Activity和View，界面部件可以在Activity、Fragment、View中复用&lt;/li&gt;
&lt;li&gt;View通过ViewModel被动更新，即ViewModel -&amp;gt; View&lt;/li&gt;
&lt;li&gt;分离渲染逻辑和控制逻辑，setText和setOnClickListener不要写在一起&lt;/li&gt;
&lt;li&gt;控制逻辑中，应该能够对当前的Activity、Fragment的生命周期进行监控，从而将UI操作和界面周期控制放在一起&lt;/li&gt;
&lt;li&gt;不追求魔法，低学习成本，KISS&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当然，除了上述目标外，到具体实现层面，还有些务实的目标，例如兼容安卓的ViewHolder重用机制。&lt;/p&gt;
&lt;h2 id=&quot;Pan的模型，MV&quot;&gt;&lt;a href=&quot;#Pan的模型，MV&quot; class=&quot;headerlink&quot; title=&quot;Pan的模型，MV*&quot;&gt;&lt;/a&gt;Pan的模型，MV*&lt;/h2&gt;&lt;p&gt;依据上述的目标，Pan的模型比传统的MVC、MVVM模型更加务实，不追求理论上的完美，而在乎实际使用中的易于上手。我们可以称之为&lt;a href=&quot;http://stackoverflow.com/questions/13329485/mvw-what-does-it-stand-for&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MVW(Whatever)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i4/56380417/TB2KrLBlVXXXXcWXXXXXXXXXXXX_!!56380417.png&quot; alt=&quot;MVC &amp;amp; MVVM &amp;amp; Pan&quot;&gt;&lt;/p&gt;
&lt;p&gt;后续的文章会进一步介绍Pan，并逐渐完善Pan的文档。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/campusappcn/Pan&quot;&gt;Pan&lt;/a&gt;是一个我在2015年中开始设计并实现的一个安卓端的MV*框架，经过大量的实践和修正，现在的Pan已经十分稳定，成为项目中的核心框架。时至今日，安卓端的MVVM和MVP类型的框架也有一些，但和2015年相比，该有的问题依然存在，而Pan框架的设计思路，也仍然能够超越这些框架，在达到目的的同时，更方便开发者的上手和使用。&lt;/p&gt;
&lt;h2 id=&quot;臃肿的Activity和Fragment&quot;&gt;&lt;a href=&quot;#臃肿的Activity和Fragment&quot; class=&quot;headerlink&quot; title=&quot;臃肿的Activity和Fragment&quot;&gt;&lt;/a&gt;臃肿的Activity和Fragment&lt;/h2&gt;&lt;p&gt;相信写安卓的人都深有体会，Activity里面一不小心就会有上千行的代码。安卓的MVC设计，Activity本身承担部分Controller的角色；而View的角色由View类型和XML来承担，同时View类型的EventListener由会承担部分的Controller角色；Model交给开发者自由选择。而一旦到真实的实践中，Activity或者Fragment往往会承担大量的代码，主要包含：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;页面的生命周期管理，e.g. onStop&lt;/li&gt;
&lt;li&gt;View的渲染细节控制，e.g. 例如setText&lt;/li&gt;
&lt;li&gt;用户交互事件的绑定，e.g. 例如setOnClickListener&lt;/li&gt;
&lt;li&gt;异步网络请求&lt;/li&gt;
&lt;li&gt;Fragment生命周期管理&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;简单的页面或许没什么问题，一旦业务逻辑复杂，Activity到后期基本无法维护，因为要做的事情太多了。&lt;/p&gt;
    
    </summary>
    
      <category term="blog" scheme="http://campusappcn.github.io/categories/blog/"/>
    
    
      <category term="Android" scheme="http://campusappcn.github.io/tags/Android/"/>
    
      <category term="MVC" scheme="http://campusappcn.github.io/tags/MVC/"/>
    
      <category term="MVVM" scheme="http://campusappcn.github.io/tags/MVVM/"/>
    
      <category term="MVP" scheme="http://campusappcn.github.io/tags/MVP/"/>
    
      <category term="Pan" scheme="http://campusappcn.github.io/tags/Pan/"/>
    
  </entry>
  
  <entry>
    <title>iOS中富文本的AttributeNames</title>
    <link href="http://campusappcn.github.io/2016/03/15/iOS%E4%B8%AD%E5%AF%8C%E6%96%87%E6%9C%AC%E7%9A%84AttributeNames/"/>
    <id>http://campusappcn.github.io/2016/03/15/iOS中富文本的AttributeNames/</id>
    <published>2016-03-15T03:14:28.000Z</published>
    <updated>2016-04-09T08:59:46.000Z</updated>
    
    <content type="html">&lt;p&gt;本文主要为项目中无处不在的NSAttributedString的属性做一次整理,方便之后开发时查询和测试&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录:&quot;&gt;&lt;/a&gt;目录:&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;#jump1&quot;&gt;1. NSFontAttributeName;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#jump2&quot;&gt;2. NSParagraphStyleAttributeName;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#jump3&quot;&gt;3. NSForegroundColorAttributeName;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#jump4&quot;&gt;4. NSBackgroundColorAttributeName;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#jump5&quot;&gt;5. NSLigatureAttributeName;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#jump6&quot;&gt;6. NSKernAttributeName;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#jump7&quot;&gt;7. NSStrikethroughStyleAttributeName;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#jump8&quot;&gt;8. NSUnderlineStyleAttributeName;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#jump9&quot;&gt;9. NSStrokeColorAttributeName;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#jump10&quot;&gt;10.NSStrokeWidthAttributeName;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#jump11&quot;&gt;11.NSShadowAttributeName;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#jump12&quot;&gt;12.NSTextEffectAttributeName;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#jump13&quot;&gt;13.NSAttachmentAttributeName;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#jump14&quot;&gt;14.NSLinkAttributeName;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#jump15&quot;&gt;15.NSBaselineOffsetAttributeName;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#jump16&quot;&gt;16.NSUnderlineColorAttributeName;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#jump17&quot;&gt;17.NSStrikethroughColorAttributeName;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#jump18&quot;&gt;18.NSObliquenessAttributeName;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#jump19&quot;&gt;19.NSExpansionAttributeName;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#jump20&quot;&gt;20.NSWritingDirectionAttributeName;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#jump21&quot;&gt;21.NSVerticalGlyphFormAttributeName;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;1-NSFontAttributeName-字体-UIFont&quot;&gt;&lt;a href=&quot;#1-NSFontAttributeName-字体-UIFont&quot; class=&quot;headerlink&quot; title=&quot;1.NSFontAttributeName//字体 UIFont&quot;&gt;&lt;/a&gt;1.&lt;span id=&quot;jump1&quot;&gt;&lt;em&gt;&lt;code&gt;NSFontAttributeName&lt;/code&gt;&lt;/em&gt;&lt;span&gt;//字体 UIFont&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3 id=&quot;2-NSParagraphStyleAttributeName-段落样式&quot;&gt;&lt;a href=&quot;#2-NSParagraphStyleAttributeName-段落样式&quot; class=&quot;headerlink&quot; title=&quot;2.NSParagraphStyleAttributeName//段落样式&quot;&gt;&lt;/a&gt;2.&lt;span id=&quot;jump2&quot;&gt;&lt;em&gt;&lt;code&gt;NSParagraphStyleAttributeName&lt;/code&gt;&lt;/em&gt;&lt;span&gt;//段落样式&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;以下截图来自&lt;a href=&quot;https://github.com/ibireme/YYText&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;YYText&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i3/373400920/TB2ZS2ylVXXXXcpXXXXXXXXXXXX_!!373400920.png&quot; width=&quot;446&quot; height=&quot;847&quot; style=&quot;margin: 0&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i2/373400920/TB2zzYBlVXXXXb_XXXXXXXXXXXX_!!373400920.png&quot; width=&quot;446&quot; height=&quot;606&quot; style=&quot;margin: 0&quot;&gt;&lt;/h2&gt;&lt;h3 id=&quot;3-NSForegroundColorAttributeName-字颜色-UIColor&quot;&gt;&lt;a href=&quot;#3-NSForegroundColorAttributeName-字颜色-UIColor&quot; class=&quot;headerlink&quot; title=&quot;3.NSForegroundColorAttributeName //字颜色  UIColor&quot;&gt;&lt;/a&gt;3.&lt;span id=&quot;jump3&quot;&gt;&lt;em&gt;&lt;code&gt;NSForegroundColorAttributeName&lt;/code&gt;&lt;/em&gt; &lt;span&gt;//字颜色  UIColor&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3 id=&quot;4-NSBackgroundColorAttributeName-背景色-UIColor&quot;&gt;&lt;a href=&quot;#4-NSBackgroundColorAttributeName-背景色-UIColor&quot; class=&quot;headerlink&quot; title=&quot;4.NSBackgroundColorAttributeName //背景色  UIColor&quot;&gt;&lt;/a&gt;4.&lt;span id=&quot;jump4&quot;&gt;&lt;em&gt;&lt;code&gt;NSBackgroundColorAttributeName&lt;/code&gt;&lt;/em&gt; &lt;span&gt;//背景色  UIColor&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;hr&gt;
&lt;h3 id=&quot;5-NSLigatureAttributeName-连写-iOS只支持-0-和-1&quot;&gt;&lt;a href=&quot;#5-NSLigatureAttributeName-连写-iOS只支持-0-和-1&quot; class=&quot;headerlink&quot; title=&quot;5.NSLigatureAttributeName //连写,iOS只支持@(0)和@(1)&quot;&gt;&lt;/a&gt;5.&lt;span id=&quot;jump5&quot;&gt;&lt;em&gt;&lt;code&gt;NSLigatureAttributeName&lt;/code&gt;&lt;/em&gt;&lt;span&gt; //连写,iOS只支持@(0)和@(1)&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i3/373400920/TB2D1MflFXXXXaOXXXXXXXXXXXX_!!373400920.png&quot; width=&quot;272&quot; height=&quot;201&quot; style=&quot;margin: 0&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;6-NSKernAttributeName-字间距&quot;&gt;&lt;a href=&quot;#6-NSKernAttributeName-字间距&quot; class=&quot;headerlink&quot; title=&quot;6.NSKernAttributeName//字间距&quot;&gt;&lt;/a&gt;6.&lt;span id=&quot;jump6&quot;&gt;&lt;em&gt;&lt;code&gt;NSKernAttributeName&lt;/code&gt;&lt;/em&gt;&lt;/span&gt;//字间距&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i3/373400920/TB2CDEqlFXXXXXfXXXXXXXXXXXX_!!373400920.png&quot; width=&quot;373&quot; height=&quot;220&quot; style=&quot;margin: 0&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;7-NSStrikethroughStyleAttributeName-删除线&quot;&gt;&lt;a href=&quot;#7-NSStrikethroughStyleAttributeName-删除线&quot; class=&quot;headerlink&quot; title=&quot;7.NSStrikethroughStyleAttributeName // 删除线&quot;&gt;&lt;/a&gt;7.&lt;span id=&quot;jump7&quot;&gt;&lt;em&gt;&lt;code&gt;NSStrikethroughStyleAttributeName&lt;/code&gt;&lt;/em&gt;&lt;/span&gt; // 删除线&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@(&lt;span class=&quot;built_in&quot;&gt;NSUnderlineStyle&lt;/span&gt;)枚举值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSUnderlineStyleNone&lt;/span&gt;                                    = &lt;span class=&quot;number&quot;&gt;0x00&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSUnderlineStyleSingle&lt;/span&gt;                                  = &lt;span class=&quot;number&quot;&gt;0x01&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSUnderlineStyleThick&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NS_ENUM_AVAILABLE&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;_0, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0)      = &lt;span class=&quot;number&quot;&gt;0x02&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;~&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt; 取值越大,线越粗&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSUnderlineStyleDouble&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NS_ENUM_AVAILABLE&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;_0, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0)     = &lt;span class=&quot;number&quot;&gt;0x09&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i4/373400920/TB2vm28lFXXXXc1XXXXXXXXXXXX_!!373400920.png&quot; width=&quot;369&quot; height=&quot;268&quot; style=&quot;margin: 0&quot;&gt;&lt;/p&gt;
&lt;p&gt;剩下的几个枚举需要配合上面的枚举来使用&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSUnderlinePatternSolid&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NS_ENUM_AVAILABLE&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;_0, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0)      = &lt;span class=&quot;number&quot;&gt;0x0000&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//实线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSUnderlinePatternDot&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NS_ENUM_AVAILABLE&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;_0, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0)        = &lt;span class=&quot;number&quot;&gt;0x0100&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//短 循环&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSUnderlinePatternDash&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NS_ENUM_AVAILABLE&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;_0, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0)       = &lt;span class=&quot;number&quot;&gt;0x0200&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//长 循环&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSUnderlinePatternDashDot&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NS_ENUM_AVAILABLE&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;_0, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0)    = &lt;span class=&quot;number&quot;&gt;0x0300&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//长短 循环&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSUnderlinePatternDashDotDot&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NS_ENUM_AVAILABLE&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;_0, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0) = &lt;span class=&quot;number&quot;&gt;0x0400&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//长短短 循环&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSUnderlineByWord&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NS_ENUM_AVAILABLE&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;_0, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0)            = &lt;span class=&quot;number&quot;&gt;0x8000&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//按单词分割&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;-1&quot;&gt;&lt;a href=&quot;#-1&quot; class=&quot;headerlink&quot; title=&quot; &quot;&gt;&lt;/a&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i2/373400920/TB2KBvUlFXXXXcqXpXXXXXXXXXX_!!373400920.png&quot; width=&quot;371&quot; height=&quot;411&quot; style=&quot;margin: 0&quot;&gt; &lt;/h2&gt;&lt;h3 id=&quot;8-NSUnderlineStyleAttributeName-下划线-值也是枚举NSUnderlineStyle的数字类型-NSUnderlineStyle-参考NSStrikethroughStyleAttributeName&quot;&gt;&lt;a href=&quot;#8-NSUnderlineStyleAttributeName-下划线-值也是枚举NSUnderlineStyle的数字类型-NSUnderlineStyle-参考NSStrikethroughStyleAttributeName&quot; class=&quot;headerlink&quot; title=&quot;8.NSUnderlineStyleAttributeName// 下划线(值也是枚举NSUnderlineStyle的数字类型-@(NSUnderlineStyle)参考NSStrikethroughStyleAttributeName)&quot;&gt;&lt;/a&gt;8.&lt;span id=&quot;jump8&quot;&gt;&lt;em&gt;&lt;code&gt;NSUnderlineStyleAttributeName&lt;/code&gt;&lt;/em&gt;&lt;/span&gt;// 下划线(值也是枚举NSUnderlineStyle的数字类型-@(NSUnderlineStyle)参考NSStrikethroughStyleAttributeName)&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i4/373400920/TB2qJEblFXXXXXhXpXXXXXXXXXX_!!373400920.png&quot; width=&quot;371&quot; height=&quot;372&quot; style=&quot;margin: 0&quot;&gt; &lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;9-NSStrokeColorAttributeName-笔画宽度和当前字的pointSize-字体大小-的比例&quot;&gt;&lt;a href=&quot;#9-NSStrokeColorAttributeName-笔画宽度和当前字的pointSize-字体大小-的比例&quot; class=&quot;headerlink&quot; title=&quot;9.NSStrokeColorAttributeName// 笔画宽度和当前字的pointSize(字体大小)的比例,&quot;&gt;&lt;/a&gt;9.&lt;span id=&quot;jump9&quot;&gt;&lt;em&gt;&lt;code&gt;NSStrokeColorAttributeName&lt;/code&gt;&lt;/em&gt;&lt;/span&gt;// 笔画宽度和当前字的pointSize(字体大小)的比例,&lt;/h3&gt;&lt;p&gt;正数真空效果&lt;br&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i4/373400920/TB2d9UylFXXXXX4XXXXXXXXXXXX_!!373400920.png&quot; width=&quot;372&quot; height=&quot;235&quot; style=&quot;margin: 0&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;10-NSStrokeColorAttributeName-NSStrokeColorAttributeName的颜色&quot;&gt;&lt;a href=&quot;#10-NSStrokeColorAttributeName-NSStrokeColorAttributeName的颜色&quot; class=&quot;headerlink&quot; title=&quot;10.NSStrokeColorAttributeName//NSStrokeColorAttributeName的颜色&quot;&gt;&lt;/a&gt;10.&lt;span id=&quot;jump10&quot;&gt;&lt;em&gt;&lt;code&gt;NSStrokeColorAttributeName&lt;/code&gt;&lt;/em&gt;&lt;/span&gt;//NSStrokeColorAttributeName的颜色&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i1/373400920/TB20GkzlFXXXXafXXXXXXXXXXXX_!!373400920.png&quot; width=&quot;373&quot; height=&quot;121&quot; style=&quot;margin: 0&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;11-NSShadowAttributeName-阴影-参考NSShadow&quot;&gt;&lt;a href=&quot;#11-NSShadowAttributeName-阴影-参考NSShadow&quot; class=&quot;headerlink&quot; title=&quot;11.NSShadowAttributeName //阴影,参考NSShadow&quot;&gt;&lt;/a&gt;11.&lt;span id=&quot;jump11&quot;&gt;&lt;em&gt;&lt;code&gt;NSShadowAttributeName&lt;/code&gt;&lt;/em&gt;&lt;/span&gt; //阴影,参考NSShadow&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i1/373400920/TB2Wmv1lFXXXXbRXpXXXXXXXXXX_!!373400920.png&quot; width=&quot;371&quot; height=&quot;72&quot; style=&quot;margin: 0&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;12-NSTextEffectAttributeName-凸版印刷体-现在就只有NSTextEffectLetterpressStyle一个值&quot;&gt;&lt;a href=&quot;#12-NSTextEffectAttributeName-凸版印刷体-现在就只有NSTextEffectLetterpressStyle一个值&quot; class=&quot;headerlink&quot; title=&quot;12.NSTextEffectAttributeName//凸版印刷体(现在就只有NSTextEffectLetterpressStyle一个值)&quot;&gt;&lt;/a&gt;12.&lt;span id=&quot;jump12&quot;&gt;&lt;em&gt;&lt;code&gt;NSTextEffectAttributeName&lt;/code&gt;&lt;/em&gt;&lt;/span&gt;//凸版印刷体(现在就只有NSTextEffectLetterpressStyle一个值)&lt;/h3&gt;&lt;p&gt;凸版印刷替效果是给文字加上奇妙阴影和高光，让文字看起有凹凸感，像是被压在屏幕上(这个描述真是有够夸张 = =!)&lt;br&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i3/373400920/TB29UgalFXXXXaXXpXXXXXXXXXX_!!373400920.png&quot; width=&quot;466&quot; height=&quot;47&quot; style=&quot;margin: 0&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;13-NSAttachmentAttributeName-图文混排相关&quot;&gt;&lt;a href=&quot;#13-NSAttachmentAttributeName-图文混排相关&quot; class=&quot;headerlink&quot; title=&quot;13.NSAttachmentAttributeName//图文混排相关&quot;&gt;&lt;/a&gt;13.&lt;span id=&quot;jump13&quot;&gt;&lt;em&gt;&lt;code&gt;NSAttachmentAttributeName&lt;/code&gt;&lt;/em&gt;&lt;/span&gt;//图文混排相关&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSTextAttachment&lt;/span&gt; *attach=[[&lt;span class=&quot;built_in&quot;&gt;NSTextAttachment&lt;/span&gt; alloc]init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    attach.image=[&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; imageNamed:&lt;span class=&quot;string&quot;&gt;@&quot;1178298162bf1917&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [base insertAttributedString:[&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; attributedStringWithAttachment:attach] atIndex:&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i3/373400920/TB2v12_lFXXXXa3XpXXXXXXXXXX_!!373400920.png&quot; width=&quot;369&quot; height=&quot;177&quot; style=&quot;margin: 0&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;14-NSLinkAttributeName-链接-但是不负责点击的处理&quot;&gt;&lt;a href=&quot;#14-NSLinkAttributeName-链接-但是不负责点击的处理&quot; class=&quot;headerlink&quot; title=&quot;14.NSLinkAttributeName//链接,但是不负责点击的处理&quot;&gt;&lt;/a&gt;14.&lt;span id=&quot;jump14&quot;&gt;&lt;em&gt;&lt;code&gt;NSLinkAttributeName&lt;/code&gt;&lt;/em&gt;&lt;/span&gt;//链接,但是不负责点击的处理&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSMutableAttributedString&lt;/span&gt; *base=[[&lt;span class=&quot;built_in&quot;&gt;NSMutableAttributedString&lt;/span&gt; alloc]initWithString:string attributes:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSRange&lt;/span&gt; rang=&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, base.length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[base addAttribute:&lt;span class=&quot;built_in&quot;&gt;NSLinkAttributeName&lt;/span&gt; value:[&lt;span class=&quot;built_in&quot;&gt;NSURL&lt;/span&gt; URLWithString:&lt;span class=&quot;string&quot;&gt;@&quot;http://www.google.com&quot;&lt;/span&gt;] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;range:[string rangeOfString:&lt;span class=&quot;string&quot;&gt;@&quot;http://www.google.com&quot;&lt;/span&gt;]];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i3/373400920/TB2ud.vlFXXXXbzXXXXXXXXXXXX_!!373400920.png&quot; width=&quot;365&quot; height=&quot;45&quot; style=&quot;margin: 0&quot;&gt;&lt;/p&gt;
&lt;p&gt;一般配合UITextView使用&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)textView:(&lt;span class=&quot;built_in&quot;&gt;UITextView&lt;/span&gt; *)textView shouldInteractWithURL:(&lt;span class=&quot;built_in&quot;&gt;NSURL&lt;/span&gt; *)URL inRange:(&lt;span class=&quot;built_in&quot;&gt;NSRange&lt;/span&gt;)characterRange&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;=============%@&quot;&lt;/span&gt;,URL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;15-NSBaselineOffsetAttributeName-离BaseLine的距离&quot;&gt;&lt;a href=&quot;#15-NSBaselineOffsetAttributeName-离BaseLine的距离&quot; class=&quot;headerlink&quot; title=&quot;15.NSBaselineOffsetAttributeName//离BaseLine的距离&quot;&gt;&lt;/a&gt;15.&lt;span id=&quot;jump15&quot;&gt;&lt;em&gt;&lt;code&gt;NSBaselineOffsetAttributeName&lt;/code&gt;&lt;/em&gt;&lt;/span&gt;//离BaseLine的距离&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/TextFonts/Conceptual/CocoaTextArchitecture/FontHandling/FontHandling.html#//apple_ref/doc/uid/TP40009459-CH5-SW1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;什么是BaseLine?&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;https://developer.apple.com/library/mac/documentation/TextFonts/Conceptual/CocoaTextArchitecture/Art/glyph_metrics_2x.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i4/373400920/TB29L.tlFXXXXcsXXXXXXXXXXXX_!!373400920.png&quot; width=&quot;367&quot; height=&quot;75&quot; style=&quot;margin: 0&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;16-NSUnderlineColorAttributeName-下划线的颜色&quot;&gt;&lt;a href=&quot;#16-NSUnderlineColorAttributeName-下划线的颜色&quot; class=&quot;headerlink&quot; title=&quot;16.NSUnderlineColorAttributeName//下划线的颜色&quot;&gt;&lt;/a&gt;16.&lt;span id=&quot;jump16&quot;&gt;&lt;em&gt;&lt;code&gt;NSUnderlineColorAttributeName&lt;/code&gt;&lt;/em&gt;&lt;/span&gt;//下划线的颜色&lt;/h3&gt;&lt;p&gt;相关属性(NSUnderlineStyleAttributeName)&lt;/p&gt;
&lt;h3 id=&quot;17-NSStrikethroughColorAttributeName-中划线的颜色&quot;&gt;&lt;a href=&quot;#17-NSStrikethroughColorAttributeName-中划线的颜色&quot; class=&quot;headerlink&quot; title=&quot;17.NSStrikethroughColorAttributeName//中划线的颜色&quot;&gt;&lt;/a&gt;17.&lt;span id=&quot;jump17&quot;&gt;&lt;em&gt;&lt;code&gt;NSStrikethroughColorAttributeName&lt;/code&gt;&lt;/em&gt;&lt;/span&gt;//中划线的颜色&lt;/h3&gt;&lt;p&gt;相关属性(NSStrikethroughStyleAttributeName)&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;18-NSObliquenessAttributeName-倾斜&quot;&gt;&lt;a href=&quot;#18-NSObliquenessAttributeName-倾斜&quot; class=&quot;headerlink&quot; title=&quot;18.NSObliquenessAttributeName//倾斜&quot;&gt;&lt;/a&gt;18.&lt;span id=&quot;jump18&quot;&gt;&lt;em&gt;&lt;code&gt;NSObliquenessAttributeName&lt;/code&gt;&lt;/em&gt;&lt;/span&gt;//倾斜&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i3/373400920/TB2le.DlFXXXXaDXXXXXXXXXXXX_!!373400920.png&quot; width=&quot;371&quot; height=&quot;383&quot; style=&quot;margin: 0&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;19-NSExpansionAttributeName-“胖”or-“瘦”-拉伸or压缩&quot;&gt;&lt;a href=&quot;#19-NSExpansionAttributeName-“胖”or-“瘦”-拉伸or压缩&quot; class=&quot;headerlink&quot; title=&quot;19.NSExpansionAttributeName//“胖”or “瘦”(拉伸or压缩)&quot;&gt;&lt;/a&gt;19.&lt;span id=&quot;jump19&quot;&gt;&lt;em&gt;&lt;code&gt;NSExpansionAttributeName&lt;/code&gt;&lt;/em&gt;&lt;/span&gt;//“胖”or “瘦”(拉伸or压缩)&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i3/373400920/TB2ru.qlFXXXXc_XXXXXXXXXXXX_!!373400920.png&quot; width=&quot;370&quot; height=&quot;286&quot; style=&quot;margin: 0&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;20-NSWritingDirectionAttributeName-文字的排布顺序-从左到右还是从右到左&quot;&gt;&lt;a href=&quot;#20-NSWritingDirectionAttributeName-文字的排布顺序-从左到右还是从右到左&quot; class=&quot;headerlink&quot; title=&quot;20.NSWritingDirectionAttributeName//文字的排布顺序(从左到右还是从右到左)&quot;&gt;&lt;/a&gt;20.&lt;span id=&quot;jump20&quot;&gt;&lt;em&gt;&lt;code&gt;NSWritingDirectionAttributeName&lt;/code&gt;&lt;/em&gt;&lt;/span&gt;//文字的排布顺序(从左到右还是从右到左)&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i3/373400920/TB2YfgLlFXXXXX8XXXXXXXXXXXX_!!373400920.png&quot; width=&quot;686&quot; height=&quot;273&quot; style=&quot;margin: 0&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//不太明白这个枚举值的两个意思...之后如果有机会明白再解释他们&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NS_ENUM&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NSWritingDirectionFormatType&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSWritingDirectionEmbedding&lt;/span&gt;     = (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSWritingDirectionOverride&lt;/span&gt;      = (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;built_in&quot;&gt;NS_ENUM_AVAILABLE&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;_11, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;_0);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h3 id=&quot;21-NSVerticalGlyphFormAttributeName-0横-1竖&quot;&gt;&lt;a href=&quot;#21-NSVerticalGlyphFormAttributeName-0横-1竖&quot; class=&quot;headerlink&quot; title=&quot;21.NSVerticalGlyphFormAttributeName//0横,1竖&quot;&gt;&lt;/a&gt;21.&lt;span id=&quot;jump21&quot;&gt;&lt;em&gt;&lt;code&gt;NSVerticalGlyphFormAttributeName&lt;/code&gt;&lt;/em&gt;&lt;/span&gt;//0横,1竖&lt;/h3&gt;&lt;p&gt;在iOS上只有横排,不过可以通过CoreText来修改成竖排&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要为项目中无处不在的NSAttributedString的属性做一次整理,方便之后开发时查询和测试&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://campusappcn.github.io/tags/iOS/"/>
    
      <category term="CoreText" scheme="http://campusappcn.github.io/tags/CoreText/"/>
    
      <category term="NSAttributedString" scheme="http://campusappcn.github.io/tags/NSAttributedString/"/>
    
  </entry>
  
  <entry>
    <title>类型判断上的小技巧</title>
    <link href="http://campusappcn.github.io/2016/03/12/%E7%B1%BB%E5%9E%8B%E5%88%A4%E6%96%AD%E4%B8%8A%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <id>http://campusappcn.github.io/2016/03/12/类型判断上的小技巧/</id>
    <published>2016-03-11T16:00:00.000Z</published>
    <updated>2016-03-12T15:13:42.000Z</updated>
    
    <content type="html">&lt;p&gt; 不知道大伙儿有没有这样的经历：&lt;br&gt; 每次看到&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-[__NSCFConstantString objectForKey:]: unrecognized selector sent to instance 0x1050a6be8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-[__NSCFNumber isEqualToString:]: unrecognized selector sent to instance 0xb0000000000007b2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样的crash是不是会有种想死的感觉。不管怎样，我每次碰到这种crash都会有中想死的冲动。虽然说这种crash修改起来超级容易，只是在进行操作前加上类型判断就可以，或者说是直接理解错误了变量的数据类型。&lt;br&gt;但是这种crash还是经常的出现，为什么呢？我思考了下，我觉得主要主要的原因有两个：&lt;br&gt;1、使用了“万能”的id；直接上例子代码吧&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;id x = @&amp;quot;123&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//many steps...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSString *str = @&amp;quot;hello&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[x isEqualToString:str];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如上的代码，开始笼统的将变量x定义为id类型的，后面又将x直接当做nsstring类型来做逻辑。也许一个人写的时候，他很清楚这块的逻辑。但是换一个人或者说是过段时间再来修改这块的代码。那么也许就会改成如下代码的可能性。因为这样子既没有报错，也没有warning。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;id x = @(123);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//many steps...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSString *str = @&amp;quot;hello&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[x isEqualToString:str];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这是一个原因，这个也是我在之前遇到过的。&lt;br&gt;2、使用自己服务器或者其他渠道的数据。&lt;br&gt;这点我相信只要做过非纯本地app的人，都深有感触。就是说虽然协议或者说约定好的x这个字段是string类型的。但是保不准到时候会出现错误传个int或者其他类型过来。记得我们cto大人说过，客户端不要轻易相信服务器给过来的数据；反之也是。其实这句话的有一层意思就是说，虽然我们大家都会按照定好的规则来执行。但是保不准有时候会出现问题。但是最终这些所有的问题都是需要由客户端来买单的。所以类型判断必不可少！&lt;/p&gt;
&lt;p&gt;然而并不是所有的地方都会记得加上类型判断的。所以还是时不时会产生文字一开始说的那些crash。那么我就在想能不能一劳永逸，在最底层的地方加上类型判断之类的方法解决这个头痛的问题呢。&lt;br&gt;自然而然的想到了消息传递。其实通常的方法调用&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[someObject messageName:parameter];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这种方法调用就是消息传递，编译器看到这个会将其转化成如下&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;objc_msgSend(someObject,@selector(messageName:),parameter);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;那么先说下向一个实例发送一个消息后，系统的处理是这样的：&lt;br&gt;1、发送消息（[self sendMsg]）&lt;br&gt;2、系统会check是否能够respnse这个消息&lt;br&gt;3、如果能response则调用想要方法，不能则抛出异常&lt;br&gt;而在第二步中，系统是如何check实例是否能response消息呢？如果实例没事就有想要的response，那么久会相应返回，如果没有系统就会发出methodSignatureForSelector消息，询问他这个消息是否有效？有效就返回相应的方法地址之类的信息，无效则返回nil。如果nil，Runtime则会发出-doesNotRecognizeSelector:消息，程序这是也就会crash，如果不是nil接着发送forwardInvocation消息。&lt;br&gt;看了上述的流程。那么是否只要在methodSignatureForSelector这一步，如果在确定本来返回的是nil的时候我自己构造一个将其返回是不是就可以不会闪退了呢。答案是：可以的。methodSignatureForSelector这一步其实也就是对方法的一个签名的返回。那么如果在这一步按照原有的签名生成的原则伪造一个假的签名，就可以蒙混过关。本会crash的方法将无响应。&lt;br&gt;以下的是我根据上面的思路写的一个nsobject的扩展类。重写了forwardInvocation和methodSignatureForSelector方法。而这里我只对了几个基础的类型做了检验。因为很多类型是ios非公开的，好像会有点问题。所以相当于先打个补丁在这里。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-(void)forwardInvocation:(NSInvocation *)anInvocation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;forwardInvocation&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(NSMethodSignature *)methodSignatureForSelector:(SEL)selector&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSMethodSignature *sig = [[self class] instanceMethodSignatureForSelector:selector];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (!sig) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BOOL shouldGo = NO;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for (Class class in [self totalClassArr]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if ([self isKindOfClass:class] || [self isMemberOfClass:class]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                shouldGo = YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (shouldGo) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //show error&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if ([sel rangeOfString:@&amp;quot;set&amp;quot;].location == 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                return [NSMethodSignature signatureWithObjCTypes:&amp;quot;v@:@&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                return [NSMethodSignature signatureWithObjCTypes:&amp;quot;@@:&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return sig;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(NSArray *)totalClassArr&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSMutableArray *arr = [[NSMutableArray alloc]init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [arr addObject:[NSArray class]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [arr addObject:[NSNumber class]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [arr addObject:[NSString class]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [arr addObject:[NSDictionary class]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [arr addObject:[NSSet class]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return [arr copy];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下图是有关于消息传递的一张流程图&lt;br&gt;我觉得能够比较好的理解消息传递这一块&lt;br&gt;&lt;img src=&quot;http://7xrcp9.com1.z0.glb.clouddn.com/blogimage_note64270_1.png?imageView2/2/w/800/q/75&quot; alt=&quot;消息传递&quot;&gt;&lt;/p&gt;
&lt;p&gt;而这篇博文关于消息传递我觉得还是比较可以推荐的 &lt;a href=&quot;https://www.zybuluo.com/MicroCai/note/64270&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.zybuluo.com/MicroCai/note/64270&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      统一的做一个类型判断，告别此类闪退
    
    </summary>
    
      <category term="blog" scheme="http://campusappcn.github.io/categories/blog/"/>
    
    
      <category term="crash" scheme="http://campusappcn.github.io/tags/crash/"/>
    
      <category term="类型判断" scheme="http://campusappcn.github.io/tags/%E7%B1%BB%E5%9E%8B%E5%88%A4%E6%96%AD/"/>
    
      <category term="消息传递" scheme="http://campusappcn.github.io/tags/%E6%B6%88%E6%81%AF%E4%BC%A0%E9%80%92/"/>
    
  </entry>
  
  <entry>
    <title>iOS中如何优雅的应对无限闪退</title>
    <link href="http://campusappcn.github.io/2016/03/08/iOS%E4%B8%AD%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E5%BA%94%E5%AF%B9%E6%97%A0%E9%99%90%E9%97%AA%E9%80%80/"/>
    <id>http://campusappcn.github.io/2016/03/08/iOS中如何优雅的应对无限闪退/</id>
    <published>2016-03-07T16:00:00.000Z</published>
    <updated>2016-03-08T07:13:51.000Z</updated>
    
    <content type="html">&lt;p&gt; 恩，这是背景。每次更新版本的时候，必须要做的一件事情就是兼容老版本。因为从老版本升级的时候也许会出现数据的兼容性问题。特别是对于数据库的兼容尤为重要。然而如果一不小心兼容性处理的不好，那么就有可能出现无限性的闪退。也许闪退这个动作对于我们开发来说，是很明了的一个现象（app出现问题，导致crash）。但是对于一般的用户而言他们并不知道这到底发生了什么事情。之前和用户接触，他们对于我们所说的闪退他们的描述有很多种：有的说我打开应用就退出来了；有的说我打开应用一下子就回到了桌面，还有的说我打不开应用。由此可以看出用户对于闪退这件事情并不是很理解。有的甚至会以为因为装了这个app导致手机出现了问题。好吧，说了这么多，我只想说明一点就是“无限闪退”是一件很恐怖的事情。&lt;br&gt;之前我安装的某应用，由于升级版本的时候的数据库升级问题，导致无限闪退，只能卸载app重装。在之前由于在一个项目中，我将错误的数据类型保存在本地，并且没有加类型判断，导致了app无限闪退，这种情况下也只能卸载app，重新安装才能正常运行。&lt;br&gt;通过这些惨痛的经历，我一不小心想到了“防爆系统”，这个霸气名字，呵呵~。是对于app出现无限闪退的时候，进行的一些操作。&lt;br&gt;主要的代码就是下面这个方法：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static void uncaughtExceptionHandler(NSException *exception) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	//do something ....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在这个方法中你可以把闪退的堆栈，原因等记录下来，通过一定的渠道获取（发邮件，上报服务器等）。&lt;br&gt;下图主要是整个防爆系统的实现逻辑。&lt;br&gt;&lt;img src=&quot;http://7xrcp9.com1.z0.glb.clouddn.com/blog%E9%98%B2%E7%88%86%E7%B3%BB%E7%BB%9F.png?imageView2/2/w/800/q/75&quot; alt=&quot;实现逻辑&quot;&gt;&lt;br&gt;其实这个逻辑很简单，主要是一种思路。之前使用手淘的时候，无意中闪退了多次，然后再次进入app的时候我的所有数据都被清除了。所以我在“是否达到了需要清除本地数据的条件”这里是这样设定的，每次闪退必定会记录下闪退的时间，每次进入app判断如果每次闪退的时间间隔为x（例如1分钟）则可以认为上一次以及上上次的闪退为有效记录，再判断如果闪退的有效记录已经达到n次（例如5次）则我认为有可能是本地的持久化数据导致了app出现问题，所以需要清除数据。&lt;br&gt;当然x和n这两个值，应该根据自己的app取舍。甚至可以在记录闪退数据的时候可以把闪退原因记录下来，对闪退的原因进行比较归类，这样的话就更加精确了。&lt;/p&gt;
&lt;p&gt;下面是我的防爆系统中的判断逻辑：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//检查并处理闪退的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(void)checkAndDealCrashData&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSDictionary *lastCrashDict = [self.crashArr lastObject];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    long long lastCrashTms = [lastCrashDict[@&amp;quot;crashTms&amp;quot;]longLongValue];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    long long curTms = [self curSystemTms];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (curTms - lastCrashTms &amp;gt; maxCrashTimeInterval) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //说明 闪退间隔已经超出了 可以理解为不需要记录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [self cleanCrashArr];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [self addCrashToData];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (self.crashArr.count &amp;gt;= (maxCrashTimes - 1)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //需要清除数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [self cleanAppLocalData];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //还没有到达上限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [self addCrashToData];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;好了，防爆系统的思路就是这些。让我们优雅的面对闪退吧~&lt;/p&gt;
</content>
    
    <summary type="html">
    
      告别无限闪退带来的烦恼
    
    </summary>
    
      <category term="blog" scheme="http://campusappcn.github.io/categories/blog/"/>
    
    
      <category term="crash" scheme="http://campusappcn.github.io/tags/crash/"/>
    
      <category term="防爆" scheme="http://campusappcn.github.io/tags/%E9%98%B2%E7%88%86/"/>
    
      <category term="闪退" scheme="http://campusappcn.github.io/tags/%E9%97%AA%E9%80%80/"/>
    
  </entry>
  
  <entry>
    <title>如何判断 TextView 内容是否被缩略</title>
    <link href="http://campusappcn.github.io/2016/03/07/%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD-TextView-%E5%86%85%E5%AE%B9%E6%98%AF%E5%90%A6%E8%A2%AB%E7%BC%A9%E7%95%A5/"/>
    <id>http://campusappcn.github.io/2016/03/07/如何判断-TextView-内容是否被缩略/</id>
    <published>2016-03-07T02:43:46.000Z</published>
    <updated>2016-03-20T09:06:36.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;What&quot;&gt;&lt;a href=&quot;#What&quot; class=&quot;headerlink&quot; title=&quot;What&quot;&gt;&lt;/a&gt;What&lt;/h2&gt;&lt;p&gt;TextView 中所谓的缩略其实如下, 实际上是在显示文本时将最后一个字符替换成 … 而已:&lt;br&gt;&lt;img src=&quot;/2016/03/07/如何判断-TextView-内容是否被缩略/ellipse_example.png&quot; alt=&quot;所谓的缩略&quot; title=&quot;所谓的缩略&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Why&quot;&gt;&lt;a href=&quot;#Why&quot; class=&quot;headerlink&quot; title=&quot;Why&quot;&gt;&lt;/a&gt;Why&lt;/h2&gt;&lt;p&gt;产品需求而已, 不细说了, 都是泪啊&lt;/p&gt;
&lt;h2 id=&quot;How&quot;&gt;&lt;a href=&quot;#How&quot; class=&quot;headerlink&quot; title=&quot;How&quot;&gt;&lt;/a&gt;How&lt;/h2&gt;&lt;h3 id=&quot;机制&quot;&gt;&lt;a href=&quot;#机制&quot; class=&quot;headerlink&quot; title=&quot;机制&quot;&gt;&lt;/a&gt;机制&lt;/h3&gt;&lt;p&gt;TextView 中的文本到底是如何排版以及显示的呢? 答案是 &lt;a href=&quot;http://developer.android.com/intl/es/reference/android/text/Layout.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Layout&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在我们调用 &lt;code&gt;textView.setText(&amp;quot;Some very long text&amp;quot;)&lt;/code&gt; 后, 真正展示在界面上的可能是 “Some very l…”, 然而此时我们调用 &lt;code&gt;textView.getText()&lt;/code&gt; 得到的却依旧是 “Some very long text”.&lt;br&gt;&lt;img src=&quot;/2016/03/07/如何判断-TextView-内容是否被缩略/text_get_text.png&quot; alt=&quot;textView.getText() 的结果&quot; title=&quot;textView.getText() 的结果&quot;&gt;&lt;/p&gt;
&lt;p&gt;因吹丝停!&lt;/p&gt;
&lt;p&gt;那么这时我们通过 &lt;code&gt;textView.getLayout().getText()&lt;/code&gt; 拿到的是什么呢? 答案是 “Some very l…ng text”.&lt;br&gt;&lt;img src=&quot;/2016/03/07/如何判断-TextView-内容是否被缩略/text_layout_get_text.png&quot; alt=&quot;textView.getLayout.getText()的结果&quot; title=&quot;textView.getLayout.getText()的结果&quot;&gt;&lt;/p&gt;
&lt;p&gt;WTH?!&lt;/p&gt;
&lt;p&gt;原来只是把&lt;strong&gt;字符替换&lt;/strong&gt;了一下而已&lt;/p&gt;
&lt;h3 id=&quot;实践&quot;&gt;&lt;a href=&quot;#实践&quot; class=&quot;headerlink&quot; title=&quot;实践&quot;&gt;&lt;/a&gt;实践&lt;/h3&gt;&lt;p&gt;了解到 TextView 的 trick 之后, 我们也可以利用它来判断当前显示的文本是否被缩略了:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 判断一个 TextView 显示的内容是否被缩略了&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;isTextEllipse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@NonNull TextView textView)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		CharSequence rawText = textView.getText();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		CharSequence displayText = textView.getLayout().getText();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; !TextUtils.equals(rawText, displayText);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt;(Exception ignored) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// getLayout() 可能返回 null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;More&quot;&gt;&lt;a href=&quot;#More&quot; class=&quot;headerlink&quot; title=&quot;More&quot;&gt;&lt;/a&gt;More&lt;/h2&gt;&lt;p&gt;由于渲染机制, 文中的方法需要在 textView.setText 之后调用, 并且需要 post 到主线程中才能生效:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;textView.setText(&lt;span class=&quot;string&quot;&gt;&quot;Some very long text&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;textView.post(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Runnable() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isTextEllipse(textView) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// do some work&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// some other work&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      奇技淫巧之如何判断一个 TextView 的内容是否被省略了
    
    </summary>
    
      <category term="blog" scheme="http://campusappcn.github.io/categories/blog/"/>
    
    
      <category term="Android" scheme="http://campusappcn.github.io/tags/Android/"/>
    
      <category term="TextView" scheme="http://campusappcn.github.io/tags/TextView/"/>
    
      <category term="缩略" scheme="http://campusappcn.github.io/tags/%E7%BC%A9%E7%95%A5/"/>
    
      <category term="Ellipse" scheme="http://campusappcn.github.io/tags/Ellipse/"/>
    
  </entry>
  
  <entry>
    <title>MVVM的图形界面单元测试</title>
    <link href="http://campusappcn.github.io/2016/03/07/2016-03-07-MVVM%E7%9A%84%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2%E6%B5%8B%E8%AF%95/"/>
    <id>http://campusappcn.github.io/2016/03/07/2016-03-07-MVVM的图形界面测试/</id>
    <published>2016-03-06T16:00:00.000Z</published>
    <updated>2016-03-20T09:06:36.000Z</updated>
    
    <content type="html">&lt;p&gt;图形界面的测试一直都是一个麻烦事，一般来说，都是开发人员开发的时候和设计稿比对，测试的时候过一遍，最终产品经理验收。正常的数据一般来说显示都没有问题的，往往是上线后的用户数据产生了特定的corner case，出现了意料之外的视觉效果。&lt;/p&gt;
&lt;h2 id=&quot;MVVM&quot;&gt;&lt;a href=&quot;#MVVM&quot; class=&quot;headerlink&quot; title=&quot;MVVM&quot;&gt;&lt;/a&gt;MVVM&lt;/h2&gt;&lt;p&gt;MVVM的核心思路，是将界面展示拆分成了VM和V两个部分，甚至很多MVVM的框架，只专注于VM和V的部分，提供双向绑定，把剩下的更新、缓存、业务逻辑都交给开发者自己决定。&lt;/p&gt;
&lt;p&gt;而视觉效果的测试，则可以只关注双向绑定的一个方向，即 VM -&amp;gt; V 这个方向，即特定的VM状态，所产生的界面应该是合理的、符合设计规范的。当然双向的测试更为理想，可以测试交互细节，答案略。O__O “…好吧，是我们可以放到后面讨论。&lt;/p&gt;
&lt;h2 id=&quot;GUI测试&quot;&gt;&lt;a href=&quot;#GUI测试&quot; class=&quot;headerlink&quot; title=&quot;GUI测试&quot;&gt;&lt;/a&gt;GUI测试&lt;/h2&gt;&lt;p&gt;现行的很多自动化UI测试框架，一般给出两种方案，一种是直接用代码检查界面是否正确显示，这里是否有这个字，那里是不是红色；一种是直接给出截图，程序员可以直接看图，甚至在图中标出预期和实际的差别。然而这类框架的一个重要缺陷是，界面改动可能十分频繁，特别是迭代速度非常快的情况下，很多时候逻辑并没有改变多少，但是界面已经迭代了好多版本。这样一来，写好的测试用例基本白搭，又得重头开始写。而视觉相关的测试用例本来就纷繁冗杂……╮(╯▽╰)╭&lt;/p&gt;
&lt;h2 id=&quot;MVVM-GUI-MGTest测试框架&quot;&gt;&lt;a href=&quot;#MVVM-GUI-MGTest测试框架&quot; class=&quot;headerlink&quot; title=&quot;MVVM + GUI = MGTest测试框架&quot;&gt;&lt;/a&gt;MVVM + GUI = MGTest测试框架&lt;/h2&gt;&lt;p&gt;脚踏实地，我们认为程序员在调试界面的时候仍然愿意去“看”，而不是用代码去检查，那么就可以利用MVVM的特点来达到这一目的。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;MVVM框架保证所有的页面V，是由VM状态直接映射的，即VM -&amp;gt; V&lt;/li&gt;
&lt;li&gt;MGT框架负责遍历所有的VM状态，生成截图&lt;/li&gt;
&lt;li&gt;程序员/测试/产品通过查看截图判定视觉的正确性&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这样做，有很多直接的好处。&lt;/p&gt;
&lt;p&gt;首先，可以分离视觉测试和开发工作，相当于视觉的单元测试无需编写额外的单元测试代码，一个不用太懂编码的测试即可完成工作。&lt;/p&gt;
&lt;p&gt;其次，查看特定的界面效果，不依赖重现某一个特定业务逻辑。这点在日常开发中，程序员自己“目测”的过程中非常常见，为了看特定状态下是否达到了预期的效果，往往需要多次重复复杂的业务逻辑，才能做一次review，效率很低。而如果是自动遍历所有状态，自然会包括特定业务逻辑的状态在其中。&lt;/p&gt;
&lt;h2 id=&quot;实现思路&quot;&gt;&lt;a href=&quot;#实现思路&quot; class=&quot;headerlink&quot; title=&quot;实现思路&quot;&gt;&lt;/a&gt;实现思路&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;深度遍历VM到基本类型&lt;/li&gt;
&lt;li&gt;提供针对基本类型取值范围的通用配置&lt;/li&gt;
&lt;li&gt;允许对特定的VM变量进行单独的变量范围配置&lt;/li&gt;
&lt;li&gt;结合VM框架，自动运行接入的界面，并对不同状态的界面进行截图&lt;/li&gt;
&lt;li&gt;展示截图，例如网页、邮件、甚至一个测试用portal&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;中间，第4步需要对VM的各个变量的各个取值进行交叉遍历，有可能会产生大量的数据，例如10个变量，每个变量2个取值就有1024张图了，实际并不需要这么多，应该首先生成能够遍历所有变量的n张图，其中n是这些变量中，最多取值的变量的取值数量。剩下的自由组合可以随机生成一些，以保证生成的图片能够迅速看完，又不会失去检查corner case的机会。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      讨论如何对图形界面进行单元测试
    
    </summary>
    
      <category term="blog" scheme="http://campusappcn.github.io/categories/blog/"/>
    
    
      <category term="MVVM" scheme="http://campusappcn.github.io/tags/MVVM/"/>
    
      <category term="GUI" scheme="http://campusappcn.github.io/tags/GUI/"/>
    
      <category term="测试" scheme="http://campusappcn.github.io/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="单元测试" scheme="http://campusappcn.github.io/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    
      <category term="图形界面" scheme="http://campusappcn.github.io/tags/%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2/"/>
    
  </entry>
  
  <entry>
    <title>Android单元测试详解（1）——— AndroidJunitTest</title>
    <link href="http://campusappcn.github.io/2016/03/06/2016-03-06-Android%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E8%AF%A6%E8%A7%A31(AndroidJunitTest)/"/>
    <id>http://campusappcn.github.io/2016/03/06/2016-03-06-Android单元测试详解1(AndroidJunitTest)/</id>
    <published>2016-03-05T16:00:00.000Z</published>
    <updated>2016-03-08T07:17:13.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;最近稍等空闲，考虑到我们项目测试覆盖率几乎等于0，因此痛下决心决定研究下Android单元测试。&lt;/p&gt;
&lt;h1 id=&quot;单元测试的类型&quot;&gt;&lt;a href=&quot;#单元测试的类型&quot; class=&quot;headerlink&quot; title=&quot;单元测试的类型&quot;&gt;&lt;/a&gt;单元测试的类型&lt;/h1&gt;&lt;p&gt;首先我们需要明确安卓的单元测试主要分为两种类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在开发主机Java虚拟机上运行的Junit Test&lt;/li&gt;
&lt;li&gt;在Android真机或者虚拟机上运行的Instrumented unit tests&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为Junit Test免去了将apk包安装到android设备上的步骤，因此速度上会比Instrumented unit tests快很多。但是跟android相关的一些库只能运行在android设备上，而无法再本机Java虚拟机上运行，比如很多包名中带android的库。因此我们这里需要做一个选择，如果某些类没有用到android相关的库，则完全可以使用Junit Test，加快测试速率。&lt;/p&gt;
&lt;p&gt;如果是在Android Studio上开发，则文件结构应该是这样的，&lt;br&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i1/754328530/TB2VoYRlXXXXXc7XXXXXXXXXXXX-754328530.png&quot; alt=&quot;单元测试文件结构&quot;&gt;&lt;br&gt;其中androidTest包中存放的是Instrumented unit tests的文件，而test中则是Junit Test，这两个文件夹在项目创建的时候AS都会帮我们创建好。可能细心的同学已经发现了，test文件夹中的文件都不能运行。&lt;br&gt;如图，我们需要将Test Artiface改为Unit Test&lt;br&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i1/754328530/TB2JdHIlXXXXXarXpXXXXXXXXXX-754328530.png&quot; alt=&quot;选择测试类型&quot;&gt;&lt;br&gt;另外这两种测试都只有在debugable = true的编译类型的时候才能运行。&lt;br&gt;了解了单元测试的两个基本类型，接下来让我们来了解下目前主流的单元测试框架或者说工具。&lt;/p&gt;
&lt;h1 id=&quot;AndroidJunit&quot;&gt;&lt;a href=&quot;#AndroidJunit&quot; class=&quot;headerlink&quot; title=&quot;AndroidJunit&quot;&gt;&lt;/a&gt;AndroidJunit&lt;/h1&gt;&lt;p&gt;Junit是Java开发中应用最多的单元测试框架，目前已经到Junit4。在Android的单元测试中我们同样可以使用它，如果是Junit Test，可以直接使用Java的Junit4。而如果测试的类必须使用Instrument Test，则我们需要使用AndroidJunitTest&lt;br&gt;首先在build.gradle文件中的defaultConfig中加入如下设置，设置使用的Instrument test的runner 为AndroidJunitRunner。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;testInstrumentationRunner &amp;quot;android.support.test.runner.AndroidJUnitRunner&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后在androidTest的java文件夹中创建测试文件&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@RunWith&lt;/span&gt;(AndroidJUnit4.class)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@LargeTest&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainActivityExprssoTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Rule&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; ActivityTestRule&amp;lt;MainActivity&amp;gt; mActivityRule = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ActivityTestRule&amp;lt;MainActivity&amp;gt;(MainActivity.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Before&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Log.d(&lt;span class=&quot;string&quot;&gt;&quot;MainActivity test&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;init test MainActivity&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testOnBtnClick&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        onView(withId(R.id.text_btn1))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .perform(click()) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertTrue(mActivityRule.getActivity().getKey());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@After&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;destroy&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们可以在@Before 中做一些初始化操作，在@After中做一些单元测试结束前需要做的一些工作。而带@Test的方法则是具体的测试方法。AndroidJunitRunner会逐个运行这些方法。关于其他的一些anntotation其实跟Junit中是一样的，具体可以参考&lt;a href=&quot;http://developer.android.com/intl/zh-cn/tools/testing-support-library/index.html#AndroidJUnitRunner&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android官方文档&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;另外以前做过Android Activity单元测试的同学可能会发现上面的代码跟你写的有些不一样。Corrcet，之前的单元测试类如果是对某个Activity做测试需要继承自ActivityInstrumentationTestCase2&lt;calculatoractivity&gt;，传入需要测试的Activity类型作为模板测试。目前该类型已被deprectd，而使用一个ActivityTestRule，作为模板参数的Activity会在@Before方法之前被launch，在@After之后被停止运行，在这之间我们可以去调用它的一些方法。&lt;/calculatoractivity&gt;&lt;/p&gt;
&lt;p&gt;如果你不需要对Activity做测试，但是需要访问一些图片等resource资源，则需要让你的测试类继承自AndroidTestCase，这样你就可以通过getContext()获取应用的上下文了。&lt;/p&gt;
&lt;p&gt;ok，本期对AndroidJunitTest的介绍就到这里。下一期我们将会介绍界面测试框架Expresso，敬请期待。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      本篇博客主要分析目前主流的Android测试框架AndroidJunitTest
    
    </summary>
    
      <category term="blog" scheme="http://campusappcn.github.io/categories/blog/"/>
    
    
      <category term="Development" scheme="http://campusappcn.github.io/tags/Development/"/>
    
      <category term="Android" scheme="http://campusappcn.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>iOS中一个可以获得参数个数的宏</title>
    <link href="http://campusappcn.github.io/2016/03/03/iOS%E4%B8%AD%E4%B8%80%E4%B8%AA%E5%8F%AF%E4%BB%A5%E8%8E%B7%E5%BE%97%E5%8F%82%E6%95%B0%E4%B8%AA%E6%95%B0%E7%9A%84%E5%AE%8F/"/>
    <id>http://campusappcn.github.io/2016/03/03/iOS中一个可以获得参数个数的宏/</id>
    <published>2016-03-03T08:03:23.000Z</published>
    <updated>2016-03-20T09:06:36.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;metamacro-argcount-…&quot;&gt;&lt;a href=&quot;#metamacro-argcount-…&quot; class=&quot;headerlink&quot; title=&quot;metamacro_argcount(…)&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/ReactiveCocoa/ReactiveCocoa/blob/e16f47cf9cb568136ebd81430b24af274c3c27c7/ReactiveCocoa/Objective-C/extobjc/metamacros.h#L45&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;metamacro_argcount(…)&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;metamacro_argcount一个可以获得传入参数个数的Macro,&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;metamacro_argcount(&lt;span class=&quot;built_in&quot;&gt;NSObject&lt;/span&gt;, version); 结果为&lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;metamacro_argcount(&lt;span class=&quot;built_in&quot;&gt;NSObject&lt;/span&gt;, version, &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;); 结果为&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;metamacro_argcount(&lt;span class=&quot;built_in&quot;&gt;NSObject&lt;/span&gt;, version, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;); 结果为&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个宏在编译期(并非运行期)就获得参数个数,是不是很神奇?来看看里面有什么鬼&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//RACmetamacros.h中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; metamacro_argcount(...) \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        metamacro_at(20, __VA_ARGS__, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;需要展开下,以下就&lt;code&gt;metamacro_argcount(NSObject, version)&lt;/code&gt;做展开&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;metamacro_argcount(NSObject, version)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;metamacro_at(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, NSObject, version, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;code&gt;metamacro_at(N, ...)&lt;/code&gt;定义:&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; metamacro_at(N, ...) \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        metamacro_concat(metamacro_at, N)(__VA_ARGS__)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;继续展开&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;metamacro_at(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, NSObject, version, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; metamacro_concat(metamacro_at,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;)(NSObject, version, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;metamacro_concat&lt;/code&gt;定义:&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; metamacro_concat(A, B) \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        metamacro_concat_(A, B)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; metamacro_concat_(A, B) A ## B&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;宏定义中&lt;code&gt;A ## B&lt;/code&gt;,&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/cpp/Concatenation.html#Concatenation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;##&lt;/code&gt;&lt;/a&gt;对A,B分割,再将A,B代入拼接,&lt;br&gt;所以上文中`metamacro_concat(metamacro_at,20)就变成了metamacro_at20&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;metamacro_concat(metamacro_at,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;)(NSObject, version, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;metamacro_at20(NSObject, version, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;metamacro_at20又是一个宏定义&lt;br&gt;&lt;code&gt;metamacro_at##Nth&lt;/code&gt;定义:&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; metamacro_at0...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; metamacro_at19...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; metamacro_at20(_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, ...) metamacro_head(__VA_ARGS__)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;继续转化 = =…&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;NSObject对应_0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;version对应_1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;对应_2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;对应_19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;还剩(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)就是metamacro_head(__VA_ARGS__)的参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;所以&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;metamacro_at20(NSObject, version, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;metamacro_at20(_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, ...) metamacro_head(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;metamacro_head&lt;/code&gt;定义:&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; metamacro_head(...) \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        metamacro_head_(__VA_ARGS__, 0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; metamacro_head_(FIRST, ...) FIRST&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;再转化&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;metamacro_head(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;metamacro_head_(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FIRST==&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;经过各种展开&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;metamacro_argcount(NSObject, version)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;metamacro_head(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;硬是获得了参数个数2……&lt;/p&gt;
&lt;p&gt;大家都很熟悉数组,用数组来类比下metamacro_argcount的功能&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *array20=@[@&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;,@&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,@&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array20就取第&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;个&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array20[&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;]=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;默认没有参数&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当我有参数的时候,我就插入到数组前面,取值就只取第20个元素&lt;br&gt;插入NSObjcet&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *array20=@[&lt;span class=&quot;built_in&quot;&gt;NSObjcet&lt;/span&gt;,@&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;,@&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,@&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array20[&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;]的值就变成了@&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,就是&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;个参数&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;再插入version&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *array20=@[&lt;span class=&quot;built_in&quot;&gt;NSObjcet&lt;/span&gt;,version,@&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;,@&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, @&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,@&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array20[&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;]的值就变成了@&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,就是&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;个参数&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;metamacro-argcount-…&quot;&gt;&lt;a href=&quot;#metamacro-argcount-…&quot; class=&quot;headerlink&quot; title=&quot;metamacro_argcount(…)&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/ReactiveCocoa/ReactiveCocoa/blob/e16f47cf9cb568136ebd81430b24af274c3c27c7/ReactiveCocoa/Objective-C/extobjc/metamacros.h#L45&quot;&gt;metamacro_argcount(…)&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;metamacro_argcount一个可以获得传入参数个数的Macro,&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;metamacro_argcount(&lt;span class=&quot;built_in&quot;&gt;NSObject&lt;/span&gt;, version); 结果为&lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;metamacro_argcount(&lt;span class=&quot;built_in&quot;&gt;NSObject&lt;/span&gt;, version, &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;); 结果为&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;metamacro_argcount(&lt;span class=&quot;built_in&quot;&gt;NSObject&lt;/span&gt;, version, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;); 结果为&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个宏在编译期(并非运行期)就获得参数个数,是不是很神奇?来看看里面有什么鬼&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//RACmetamacros.h中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; metamacro_argcount(...) \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        metamacro_at(20, __VA_ARGS__, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;需要展开下,以下就&lt;code&gt;metamacro_argcount(NSObject, version)&lt;/code&gt;做展开&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;metamacro_argcount(NSObject, version)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;metamacro_at(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, NSObject, version, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://campusappcn.github.io/tags/iOS/"/>
    
      <category term="ReactiveCocoa" scheme="http://campusappcn.github.io/tags/ReactiveCocoa/"/>
    
      <category term="Macros" scheme="http://campusappcn.github.io/tags/Macros/"/>
    
  </entry>
  
  <entry>
    <title>ReactiveCocoa2-5修炼 (三)</title>
    <link href="http://campusappcn.github.io/2016/03/02/ReactiveCocoa2-5%E4%BF%AE%E7%82%BC-%E4%B8%89/"/>
    <id>http://campusappcn.github.io/2016/03/02/ReactiveCocoa2-5修炼-三/</id>
    <published>2016-03-02T02:37:18.000Z</published>
    <updated>2016-04-09T08:59:46.000Z</updated>
    
    <content type="html">&lt;p&gt;上一篇做了流转化源码的阅读,再看看流还有哪些用的到的操作,并阅读下源码,&lt;br&gt;1.concat&lt;br&gt;2.then&lt;br&gt;3.merge&lt;br&gt;4.flatten&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;concat&quot;&gt;&lt;a href=&quot;#concat&quot; class=&quot;headerlink&quot; title=&quot;concat:&quot;&gt;&lt;/a&gt;concat:&lt;/h2&gt;&lt;p&gt;写了简单的例子测试下:&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RACSignal *signalA = [RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [subscriber sendNext:&lt;span class=&quot;string&quot;&gt;@&quot;ABC&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//[subscriber sendCompleted];&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RACSignal *signalB = [RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [subscriber sendNext:&lt;span class=&quot;string&quot;&gt;@&quot;CBA&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[signalA concat:signalB] subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;x--%@&quot;&lt;/span&gt;,x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//输出:2016-03-02 11:15:43.704 RACFunTest[2366:155132] x--ABC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;只输出了ABC&lt;/p&gt;
&lt;h3 id=&quot;看看concat的源码&quot;&gt;&lt;a href=&quot;#看看concat的源码&quot; class=&quot;headerlink&quot; title=&quot;看看concat的源码&quot;&gt;&lt;/a&gt;看看concat的源码&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (RACSignal *)concat:(RACSignal *)signal &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[RACSignal createSignal:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSerialDisposable *serialDisposable = [[RACSerialDisposable alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACDisposable *sourceDisposable = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [subscriber sendNext:x];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; error:^(&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [subscriber sendError:error];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; completed:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        RACDisposable *concattedDisposable = [signal subscribe:subscriber];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        serialDisposable.disposable = concattedDisposable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    serialDisposable.disposable = sourceDisposable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; serialDisposable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;] setNameWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;[%@] -concat: %@&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.name, signal];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到内部创建了一个新的RACSignal,继续看代码&lt;code&gt;[self subscribeNext:^(id x)&lt;/code&gt;,因为是&lt;code&gt;[signalA concat:signalB]&lt;/code&gt;,所以这里的self就是signalA,&lt;code&gt;[subscriber sendNext:x];&lt;/code&gt;,符合输出的结果,在&lt;code&gt;completed&lt;/code&gt;的block中调用了&lt;code&gt;[signal subscribe:subscriber]&lt;/code&gt;,原来signalA发了&lt;code&gt;sendCompleted&lt;/code&gt;signalB才会被&lt;code&gt;subscribe:&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//打开被注释掉的代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[subscriber sendCompleted];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//2016-03-02 11:36:38.561 RACFunTest[2422:163940] x--ABC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//2016-03-02 11:36:38.562 RACFunTest[2422:163940] x--CBA&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;concat能干嘛&quot;&gt;&lt;a href=&quot;#concat能干嘛&quot; class=&quot;headerlink&quot; title=&quot;concat能干嘛?&quot;&gt;&lt;/a&gt;concat能干嘛?&lt;/h3&gt;&lt;p&gt;让信号能按顺序来给订阅者发消息.&lt;br&gt;A concat B ,A发完了B再发&lt;br&gt;B concat A ,B发完了A再发&lt;br&gt;另外结合源码的理解,可以知道concat之后可以继续concat,A concat B concat C&lt;br&gt;只要B能够发送sendCompleted那么C发送的值就能被订阅者收到.&lt;/p&gt;
&lt;h2 id=&quot;then&quot;&gt;&lt;a href=&quot;#then&quot; class=&quot;headerlink&quot; title=&quot;then&quot;&gt;&lt;/a&gt;then&lt;/h2&gt;&lt;p&gt;继续写个栗子:&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[[signalA then:^RACSignal *&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; signalB;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;] subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;x--%@&quot;&lt;/span&gt;,x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出:&lt;span class=&quot;string&quot;&gt;@&quot;CBA&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;看看then的源码&quot;&gt;&lt;a href=&quot;#看看then的源码&quot; class=&quot;headerlink&quot; title=&quot;看看then的源码&quot;&gt;&lt;/a&gt;看看then的源码&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (RACSignal *)then:(RACSignal * (^)(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;))block &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSCParameterAssert&lt;/span&gt;(block != &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ignoreValues]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        concat:[RACSignal defer:block]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setNameWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;[%@] -then:&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.name];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//[self ignoreValues]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (RACSignal *)ignoreValues &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; filter:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; _) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;] setNameWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;[%@] -ignoreValues&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.name];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//[RACSignal defer:block]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (RACSignal *)defer:(RACSignal * (^)(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;))block &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSCParameterAssert&lt;/span&gt;(block != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[RACSignal createSignal:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [block() subscribe:subscriber];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;] setNameWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;+defer:&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第一步方法的调用,使SignalA的值全过滤掉了,然后concat了signalB,所以跟concat的不同是,只会输出signalB的值,不会输出signalA,而且从concat源码中了解到,必须在signalA发送了sendCompleted,signalB才会起效,所以then操作也是这样,只有前一个结束了,后一个才有效&lt;/p&gt;
&lt;h2 id=&quot;merge&quot;&gt;&lt;a href=&quot;#merge&quot; class=&quot;headerlink&quot; title=&quot;merge&quot;&gt;&lt;/a&gt;merge&lt;/h2&gt;&lt;p&gt;简单栗子:&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RACSignal *signalA = [RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [subscriber sendNext:&lt;span class=&quot;string&quot;&gt;@&quot;A&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(&lt;span class=&quot;number&quot;&gt;0.01&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;NSEC_PER_SEC&lt;/span&gt;)), dispatch_get_main_queue(), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [subscriber sendNext:&lt;span class=&quot;string&quot;&gt;@&quot;A2&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RACSignal *signalB = [RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [subscriber sendNext:&lt;span class=&quot;string&quot;&gt;@&quot;B&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[signalA merge:signalB] subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;x--%@&quot;&lt;/span&gt;,x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-02&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;57.832&lt;/span&gt; RA&lt;span class=&quot;built_in&quot;&gt;CFunTest&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;2935&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;218636&lt;/span&gt;] x--A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-02&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;57.833&lt;/span&gt; RA&lt;span class=&quot;built_in&quot;&gt;CFunTest&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;2935&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;218636&lt;/span&gt;] x--B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-02&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;57.860&lt;/span&gt; RA&lt;span class=&quot;built_in&quot;&gt;CFunTest&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;2935&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;218636&lt;/span&gt;] x--A2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;看看merge源码&quot;&gt;&lt;a href=&quot;#看看merge源码&quot; class=&quot;headerlink&quot; title=&quot;看看merge源码&quot;&gt;&lt;/a&gt;看看merge源码&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//在RACSignal+Operations中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (RACSignal *)merge:(RACSignal *)signal &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[RACSignal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        merge:@[ &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, signal ]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setNameWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;[%@] -merge: %@&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.name, signal];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (RACSignal *)merge:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;NSFastEnumeration&lt;/span&gt;&amp;gt;)signals &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; *copiedSignals = [[&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (RACSignal *signal &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; signals) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [copiedSignals addObject:signal];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[[RACSignal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        createSignal:^ RACDisposable * (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (RACSignal *signal &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; copiedSignals) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                [subscriber sendNext:signal];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [subscriber sendCompleted];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        flatten]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setNameWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;+merge: %@&quot;&lt;/span&gt;, copiedSignals];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;merge也产生了新的流,当这个流被订阅的时候,他就遍历自己的copiedSignals数组,将signal发送,将signal当做数据发送,那么我们在订阅的时候,&lt;code&gt;id x&lt;/code&gt;就是一个信号,还需要对x进行订阅才能触发didSubscribe?这里还涉及到另一个操作,&lt;code&gt;flatten&lt;/code&gt;,&lt;/p&gt;
&lt;h2 id=&quot;flatten&quot;&gt;&lt;a href=&quot;#flatten&quot; class=&quot;headerlink&quot; title=&quot;flatten&quot;&gt;&lt;/a&gt;flatten&lt;/h2&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//在RACStream.m中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (instancetype)flatten &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    __&lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt; RACStream *stream __attribute__((unused)) = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; flattenMap:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;] setNameWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;[%@] -flatten&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.name];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里的flattenMap逻辑可以按照修炼(二)中的过程走一遍,&lt;/p&gt;
&lt;p&gt;从表面上看,flatten作用就是:如果一个SignalB的sendNext:发送了一个signalA,可以将这个signalB做flatten操作后,订阅者看起来就是订阅的signalA.&lt;/p&gt;
&lt;p&gt;根据修炼二中的逻辑过一遍的时候,&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; stream = block(value) ?: [class empty];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSCAssert&lt;/span&gt;([stream isKindOfClass:RACStream.class], &lt;span class=&quot;string&quot;&gt;@&quot;Value returned from -flattenMap: is not a stream: %@&quot;&lt;/span&gt;, stream);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; stream;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;回调到这一段代码时,block(value)在flatten方法中就是&lt;code&gt;return value;&lt;/code&gt;,即signalA&lt;br&gt;再回到&lt;code&gt;bind:&lt;/code&gt;方法内,执行&lt;code&gt;addSignal(signal)&lt;/code&gt;….&lt;/p&gt;
&lt;p&gt;不得不感叹,RAC设计者的逻辑真是强大&lt;/p&gt;
&lt;p&gt;搞明白了flatten,那么merge中&lt;code&gt;[subscriber sendNext:signal];&lt;/code&gt;也就明白了,外部订阅者拿到的就是signal发送的&lt;/p&gt;
&lt;h3 id=&quot;flatten的作用-merge的作用&quot;&gt;&lt;a href=&quot;#flatten的作用-merge的作用&quot; class=&quot;headerlink&quot; title=&quot;flatten的作用,merge的作用&quot;&gt;&lt;/a&gt;flatten的作用,merge的作用&lt;/h3&gt;&lt;p&gt;&lt;em&gt;flatten的作用:&lt;/em&gt;SignalY发送signalX,flatten SignalY之后产生signalZ,&lt;br&gt;订阅signalZ的作用跟订阅signalX的作用一样,还是写个栗子吧&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RACSignal *signalX = [RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [subscriber sendNext:&lt;span class=&quot;string&quot;&gt;@&quot;A&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [subscriber sendNext:&lt;span class=&quot;string&quot;&gt;@&quot;B&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RACSignal *signalY = [RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [subscriber sendNext:signalX];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//*不用flatten:*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[signalY subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *signal=x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [signal subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;x--%@&quot;&lt;/span&gt;,x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//*用flatten*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[signalY flatten] subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;x--%@&quot;&lt;/span&gt;,x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出:A B&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;merge的作用&lt;/em&gt;将2个signal合并成一个,任一一个发出信息,订阅者都能接受,&lt;/p&gt;
&lt;h2 id=&quot;总结下&quot;&gt;&lt;a href=&quot;#总结下&quot; class=&quot;headerlink&quot; title=&quot;总结下&quot;&gt;&lt;/a&gt;总结下&lt;/h2&gt;&lt;p&gt;操作:signalA 操作符 signalB&lt;br&gt;1.concat : 会先输出signalA的值,signalA发送了sendCompleted,signalB才会起效,接着输出signalB&lt;br&gt;2.then : 不会输出signalA的值,但需要等到signalA执行完了自己的sendNext之后sendCompleted,signalB才会起效,只输出signalB&lt;br&gt;3.merge : signalA和signalB,按sendNext的执行顺序依次输出&lt;br&gt;操作:[signalA sendNext:signalB]&lt;br&gt;4.flatten : 就相当于,解包,订阅flatten之后的Signal跟订阅signalB一样.&lt;/p&gt;
&lt;h2 id=&quot;写了3篇的源码阅读的回顾-谈谈收获了啥&quot;&gt;&lt;a href=&quot;#写了3篇的源码阅读的回顾-谈谈收获了啥&quot; class=&quot;headerlink&quot; title=&quot;写了3篇的源码阅读的回顾,谈谈收获了啥.&quot;&gt;&lt;/a&gt;写了3篇的源码阅读的回顾,谈谈收获了啥.&lt;/h2&gt;&lt;p&gt;1.对RACSignal相关的一系列类的父子类关系有了一点了解,RACEmptySignal,来干嘛的呀,&lt;br&gt;RACReturnSignal是干嘛的呀,这些等等.不然看别人写的RAC看的一脸懵逼&lt;br&gt;2.之前没想到过block来返回block,(别笑…),等于就是传递IMP,可以来统一接口&lt;br&gt;3.再看RACSignal的各种方法(&lt;code&gt;ignore:&lt;/code&gt;,&lt;code&gt;startWith:&lt;/code&gt;,…)轻松多了,看下源码,再结合源码文档的注释基本知道在干嘛.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;上一篇做了流转化源码的阅读,再看看流还有哪些用的到的操作,并阅读下源码,&lt;br&gt;1.concat&lt;br&gt;2.then&lt;br&gt;3.merge&lt;br&gt;4.flatten&lt;br&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://campusappcn.github.io/tags/iOS/"/>
    
      <category term="ReactiveCocoa" scheme="http://campusappcn.github.io/tags/ReactiveCocoa/"/>
    
  </entry>
  
  <entry>
    <title>ReactiveCocoa2-5修炼 (二)</title>
    <link href="http://campusappcn.github.io/2016/03/01/ReactiveCocoa2-5%E4%BF%AE%E7%82%BC-%E4%BA%8C/"/>
    <id>http://campusappcn.github.io/2016/03/01/ReactiveCocoa2-5修炼-二/</id>
    <published>2016-03-01T02:29:01.000Z</published>
    <updated>2016-04-09T08:59:46.000Z</updated>
    
    <content type="html">&lt;p&gt;上一篇阅读了&lt;code&gt;RACSignal&lt;/code&gt;订阅过程的一些源码,这一篇来看看流的一系列操作Mapping,Filtering&lt;br&gt;本文主要内容:&lt;br&gt;1.map操作的源码阅读;(其实是flattenMap:的源码)&lt;br&gt;2.filter操作&lt;br&gt;3.空信号RACEmptySignal&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;RACStream&quot;&gt;&lt;a href=&quot;#RACStream&quot; class=&quot;headerlink&quot; title=&quot;RACStream&quot;&gt;&lt;/a&gt;RACStream&lt;/h2&gt;&lt;p&gt;&lt;code&gt;RACStream&lt;/code&gt;是&lt;code&gt;RACSignal&lt;/code&gt;和&lt;code&gt;RACSequence&lt;/code&gt;的父类,所以很多方法定义在&lt;code&gt;RACStream&lt;/code&gt;中,&lt;code&gt;RACStream&lt;/code&gt;是一个抽象类.&lt;br&gt;来看看&lt;code&gt;RACStream&lt;/code&gt;中定义了些什么东西&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RACStream&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;NSObject&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (instancetype)empty;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (instancetype)&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (instancetype)bind:(RACStreamBindBlock (^)(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;))block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (instancetype)concat:(RACStream *)stream;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (instancetype)zipWith:(RACStream *)stream;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RACStream&lt;/span&gt; (&lt;span class=&quot;title&quot;&gt;Operations&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (instancetype)flattenMap:(RACStream * (^)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value))block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (instancetype)flatten;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (instancetype)map:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; (^)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value))block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...........&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Map操作&quot;&gt;&lt;a href=&quot;#Map操作&quot; class=&quot;headerlink&quot; title=&quot;Map操作&quot;&gt;&lt;/a&gt;Map操作&lt;/h2&gt;&lt;p&gt;如果把&lt;code&gt;RACStream&lt;/code&gt;比作是水流的话,Map操作可以是一个个加工工厂,比如一个可乐工厂,水流流进工厂,工厂处理过后,流出了可乐流,在可乐流上接了龙头,打开阀门就可以喝可乐了.&lt;/p&gt;
&lt;p&gt;写个栗子:&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RACSignal *signal = [RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [subscriber sendNext:&lt;span class=&quot;string&quot;&gt;@&quot;ABC&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RACSignal *mappedSignalA=[signal map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *text=value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; @(text.length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[mappedSignalA subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;class-%@,value-%@&quot;&lt;/span&gt;,[x class],x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[signal subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;class-%@,value-%@&quot;&lt;/span&gt;,[x class],x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-01&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;06&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;29.725&lt;/span&gt; RA&lt;span class=&quot;built_in&quot;&gt;CFunTest&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;2703&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;176158&lt;/span&gt;] class-__&lt;span class=&quot;built_in&quot;&gt;NSCFNumber&lt;/span&gt;,value&lt;span class=&quot;number&quot;&gt;-3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-01&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;06&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;29.725&lt;/span&gt; RA&lt;span class=&quot;built_in&quot;&gt;CFunTest&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;2703&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;176158&lt;/span&gt;] class-__&lt;span class=&quot;built_in&quot;&gt;NSCFConstantString&lt;/span&gt;,value-ABC&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;从栗子中可以看到,流进可乐工厂产生了新的可乐流,而不是将原先的水流全部转化成了可乐流,我还想喝水还能喝.&lt;/p&gt;
&lt;h3 id=&quot;来看看map的实现&quot;&gt;&lt;a href=&quot;#来看看map的实现&quot; class=&quot;headerlink&quot; title=&quot;来看看map的实现&quot;&gt;&lt;/a&gt;来看看map的实现&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//RACStream.m中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (instancetype)map:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; (^)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value))block &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSCParameterAssert&lt;/span&gt;(block != &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Class class = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.class;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; flattenMap:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [class &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;:block(value)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;] setNameWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;[%@] -map:&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.name];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//RACSignal和RACDynamicSignal没有重写map和flattenMap方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//RACStream.m中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (instancetype)flattenMap:(RACStream * (^)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value))block &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Class class = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.class;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; bind:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value, &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; *stop) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; stream = block(value) ?: [class empty];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; stream;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;] setNameWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;[%@] -flattenMap:&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.name];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//RACSignal.m重写了bind方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (RACSignal *)bind:(RACStreamBindBlock (^)(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;))block &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//这个方法返回了一个新创建的RACSignal.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[RACSignal createSignal:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        RACStreamBindBlock bindingBlock = block();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		...(太多不复制,有需要知道这里面的细节再看)...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;] setNameWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;[%@] -bind:&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.name];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;为了看清楚些,转化下源码的代码&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//map方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (instancetype)map:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; (^)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value))block &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSCParameterAssert&lt;/span&gt;(block != &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Class class = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.class;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACStream *(^innerBlock)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value)=^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [class &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;:block(value)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACStream *stream=[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; flattenMap:innerBlock];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//-(instancetype)flattenMap:(RACStream * (^)(id value))block;方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [stream setNameWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;[%@] -map:&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.name];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//flattenMap方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (instancetype)flattenMap:(RACStream * (^)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value))block &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Class class = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.class;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACStreamBindBlock bindBlock = ^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value, &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; *stop)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; stream = block(value) ?: [class empty];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; stream;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACStreamBindBlock (^A_Block_That_Return_A_RACStreamBindBlock)(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)=^RACStreamBindBlock(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bindBlock;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACStream *stream=[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; bind:A_Block_That_Return_A_RACStreamBindBlock];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//- (RACSignal *)bind:(RACStreamBindBlock (^)(void))block;方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//typedef RACStream * (^RACStreamBindBlock)(id value, BOOL *stop);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [stream setNameWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;[%@] -flattenMap:&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.name];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;从转化后的代码可以看到&lt;br&gt;1.&lt;code&gt;map:&lt;/code&gt;方法内,调用&lt;code&gt;flattenMap:&lt;/code&gt;需要一个&lt;code&gt;RACStream&lt;/code&gt;类型的block&lt;br&gt;2.那么把这个block写明白点,命名为innerBlock,然后将innerBlock传给&lt;code&gt;flattenMap:&lt;/code&gt;方法&lt;br&gt;3.&lt;code&gt;flattenMap:&lt;/code&gt;方法内,调用&lt;code&gt;bind:&lt;/code&gt;方法需要一个&lt;code&gt;RACStreamBindBlock (^)(void)&lt;/code&gt;类型的block&lt;br&gt;4.看到&lt;code&gt;RACStreamBindBlock&lt;/code&gt;是一个返回RACStream类型,参数是value和stop指针的block&lt;br&gt;5.所以&lt;code&gt;RACStreamBindBlock (^)(void)&lt;/code&gt;这个block的作用就是返回一个&lt;code&gt;RACStreamBindBlock&lt;/code&gt;类型的block&lt;/p&gt;
&lt;p&gt;恩,map的工作就是传了很多block,好了,来看看&lt;code&gt;RACSignal&lt;/code&gt;中的&lt;code&gt;bind&lt;/code&gt;做了什么&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//bind方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (RACSignal *)bind:(RACStreamBindBlock (^)(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;))block &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     RACSignal *mappedSignalA=[RACSignal createSignal:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//(以下一大段代码就是被保存在了signal的`mappedSignalA`属性中)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//(订阅逻辑修炼一有介绍)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        RACStreamBindBlock bindingBlock = block();                          &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; *signals = [&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; arrayWithObject:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;];  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (^completeSignal)(RACSignal *, RACDisposable *)&lt;span class=&quot;comment&quot;&gt;//一个completeSignal block&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (^addSignal)(RACSignal *)&lt;span class=&quot;comment&quot;&gt;//一个addSignal block&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        RACDisposable *bindingDisposable = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; stop = &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; signal = bindingBlock(x, &amp;amp;stop);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;@autoreleasepool&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (signal != &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;) addSignal(signal);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (signal == &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; || stop) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        [selfDisposable dispose];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        completeSignal(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, selfDisposable);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; error:^(&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                [compoundDisposable dispose];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                [subscriber sendError:error];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; completed:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;@autoreleasepool&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    completeSignal(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, selfDisposable);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         selfDisposable.disposable = bindingDisposable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; compoundDisposable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [mappedSignalA setNameWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;[%@] -bind:&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.name];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;bind就是把blocks埋起来&lt;br&gt;到这里map的工作完成了,产生了新的RACSignal–栗子中的&lt;code&gt;mappedSignalA&lt;/code&gt;,&lt;br&gt;如果不订阅,这一切都是瞎忙&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[signal subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;class-%@,value-%@&quot;&lt;/span&gt;,[x class],x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//subscribeNext的逻辑在修炼(一)中有介绍,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;map把blocks埋起来,subscribeNext开始挖&lt;br&gt;1.调用mappedSignalA中的didSubscribe保存的代码&lt;br&gt;2.第一行代码&lt;code&gt;RACStreamBindBlock bindingBlock = block()&lt;/code&gt;;这个block就是&lt;code&gt;A_Block_That_Return_A_RACStreamBindBlock&lt;/code&gt;,从上文的代码中可以看到&lt;code&gt;A_Block_That_Return_A_RACStreamBindBlock&lt;/code&gt;执行返回&lt;code&gt;bindBlock&lt;/code&gt;,将&lt;code&gt;bindBlock&lt;/code&gt;复制给&lt;code&gt;bindingBlock&lt;/code&gt;&lt;br&gt;3.运行到&lt;code&gt;RACDisposable *bindingDisposable = [self subscribeNext:^(id x) {}&lt;/code&gt;,这里的self即栗子中的&lt;code&gt;signal&lt;/code&gt;,x的值就是@”ABC”&lt;br&gt;4.执行&lt;code&gt;id signal = bindingBlock(x, &amp;amp;stop);&lt;/code&gt;即回调bindBlock&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RACStreamBindBlock bindBlock = ^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value, &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; *stop)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; stream = block(value) ?: [class empty];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; stream;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;5.执行block(value),即回调innerBlock,value=@”ABC”&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RACStream *(^innerBlock)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value)=^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [class &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;:block(value)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6.RACSignal的[class return:block(value)],value=@”ABC”&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+ (RACSignal *)&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)value &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [RACReturnSignal &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;:value];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;block(value)即&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *text=value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; @(text.length);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;返回@(3)&lt;br&gt;7.在RACReturnSignal中value=@(3)&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RACReturnSignal&lt;/span&gt; ()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;strong&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;readonly&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (RACSignal *)&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)value &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACReturnSignal *signal = [[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    signal-&amp;gt;_value = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; signal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;返回一个&lt;code&gt;RACReturnSignal&lt;/code&gt;的实例,value为3;&lt;br&gt;8.结束了一大串的回调,&lt;br&gt;回到id signal = bindingBlock(x, &amp;amp;stop);&lt;br&gt;signal就是一个&lt;code&gt;RACReturnSignal&lt;/code&gt;的实例,value为3&lt;br&gt;9.进入判断if (signal != nil) addSignal(signal);&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (^addSignal)(RACSignal *) = ^(RACSignal *signal) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...(省略)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACDisposable *disposable = [signal subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [subscriber sendNext:x];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; error:^(&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [compoundDisposable dispose];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [subscriber sendError:error];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; completed:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;@autoreleasepool&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            completeSignal(signal, selfDisposable);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    selfDisposable.disposable = disposable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;10.可以看到对&lt;code&gt;RACReturnSignal&lt;/code&gt;的实例订阅,会执行&lt;code&gt;RACReturnSignal&lt;/code&gt;重写的[subscribe o]方法&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (RACDisposable *)subscribe:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt;)subscriber &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSCParameterAssert&lt;/span&gt;(subscriber != &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [RACScheduler.subscriptionScheduler schedule:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [subscriber sendNext:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.value];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [subscriber sendCompleted];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;返回了self.value即@(3)&lt;br&gt;11.addSignal这个block中执行[subscriber sendNext:@(3)];&lt;br&gt;12.mappedSignalA的block被调用 输出:NSNumber,3&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[mappedSignalA subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;class-%@,value-%@&quot;&lt;/span&gt;,[x class],x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;整理下过程&quot;&gt;&lt;a href=&quot;#整理下过程&quot; class=&quot;headerlink&quot; title=&quot;整理下过程&quot;&gt;&lt;/a&gt;整理下过程&lt;/h3&gt;&lt;p&gt;1.对一个&lt;code&gt;RACSignal&lt;/code&gt;调用&lt;code&gt;map:&lt;/code&gt;方法后,会产生新的数据流mappedSignal&lt;br&gt;2.订阅mappedSignal&lt;br&gt;3.mappedSignal内各种回调,回调到&lt;code&gt;map:&lt;/code&gt;的处理过程,即栗子中&lt;br&gt;&lt;code&gt;NSString *text=value; return @(text.length);&lt;/code&gt;&lt;br&gt;4.内部新产生一个&lt;code&gt;RACReturnSignal&lt;/code&gt;类型的signal保存&lt;code&gt;mapd:&lt;/code&gt;block回调的值&lt;br&gt;5.&lt;code&gt;bind:&lt;/code&gt;内订阅&lt;code&gt;RACReturnSignal&lt;/code&gt;,&lt;code&gt;RACReturnSignal&lt;/code&gt;内的方法将value返回&lt;br&gt;6.[subscriber sendNext:x];mappedSignal的订阅者获得结果&lt;br&gt;其实看似简单的一个map,内部实现起来却不容易.&lt;/p&gt;
&lt;h3 id=&quot;开发中可能遇到的场景-验证密码输入框的字数&quot;&gt;&lt;a href=&quot;#开发中可能遇到的场景-验证密码输入框的字数&quot; class=&quot;headerlink&quot; title=&quot;开发中可能遇到的场景:验证密码输入框的字数&quot;&gt;&lt;/a&gt;开发中可能遇到的场景:验证密码输入框的字数&lt;/h3&gt;&lt;p&gt;密码长度大于6时候,登入按钮才可以点击&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;__&lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;) weakSelf = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.pwdTextField.rac_textSignal map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *pwd=value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; @(pwd.length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;] subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;x--%@&quot;&lt;/span&gt;,x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    weakSelf.loginBtn.enabled=[x integerValue]&amp;gt;&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; error:^(&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;error&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//正常情况下这个error是不会被调用的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;flattenMap的一个应用场景&quot;&gt;&lt;a href=&quot;#flattenMap的一个应用场景&quot; class=&quot;headerlink&quot; title=&quot;flattenMap的一个应用场景&quot;&gt;&lt;/a&gt;flattenMap的一个应用场景&lt;/h3&gt;&lt;p&gt;上一块代码中的error不会被调用,因为rac_textSignal正常下不会发error,那么我想要流有判断错误的功能怎么办呢,&lt;br&gt;1.订阅rac_textSignal,再外层重新创建一个会发送error的newSignal,然后订阅newSignal&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;__&lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;) weakSelf = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RACSignal *newSignal=[RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [weakSelf.pwdTextField.rac_textSignal subscribeNext:^(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *text) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        text.length&amp;lt;&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;?[subscriber sendError:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;]:[subscriber sendNext:@(text.length)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[newSignal subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    weakSelf.loginBtn.enabled=&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; error:^(&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    weakSelf.loginBtn.enabled=&lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2.用flattenMap&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;__&lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;) weakSelf = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.pwdTextField.rac_textSignal flattenMap:^RACStream *(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *text) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        text.length&amp;lt;&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;?[subscriber sendError:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;]:[subscriber sendNext:@(text.length)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;] subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;x--%@&quot;&lt;/span&gt;,x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    weakSelf.loginBtn.enabled=&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; error:^(&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;error&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    weakSelf.loginBtn.enabled=&lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Filtering&quot;&gt;&lt;a href=&quot;#Filtering&quot; class=&quot;headerlink&quot; title=&quot;Filtering&quot;&gt;&lt;/a&gt;Filtering&lt;/h2&gt;&lt;p&gt;返回YES的值才能被订阅&lt;br&gt;简单例子:&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//密码长度大于6时候,登入按钮才可以点击&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; __&lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;) weakSelf = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.pwdTextField.rac_textSignal filter:^&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *text=value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; text.length&amp;gt;&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;] subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    weakSelf.loginBtn.enabled=&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;看看filter-内部&quot;&gt;&lt;a href=&quot;#看看filter-内部&quot; class=&quot;headerlink&quot; title=&quot;看看filter:内部&quot;&gt;&lt;/a&gt;看看filter:内部&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (instancetype)filter:(&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; (^)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value))block &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Class class = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.class;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; flattenMap:^ &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (block(value)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [class &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;:value];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; class.empty;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;] setNameWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;[%@] -filter:&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.name];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有了map的理解基础,filter就很简单了,&lt;br&gt;关键在于&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (block(value)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [class &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;:value];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; class.empty;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;block(value)即例子中的return text.length&amp;gt;6;&lt;br&gt;如果判断为真,则返回值,&lt;br&gt;如果判断为假,则返回空信号量&lt;/p&gt;
&lt;h3 id=&quot;空信号量&quot;&gt;&lt;a href=&quot;#空信号量&quot; class=&quot;headerlink&quot; title=&quot;空信号量&quot;&gt;&lt;/a&gt;空信号量&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+ (RACSignal *)empty &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [RACEmptySignal empty];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//在RACEmptySignal.m中,subscribe的实现&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (RACDisposable *)subscribe:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt;)subscriber &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [RACScheduler.subscriptionScheduler schedule:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [subscriber sendCompleted];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在bind:内部就会调用&lt;code&gt;completeSignal(self, selfDisposable)&lt;/code&gt;;&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//completeSignal的block&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (^completeSignal)(RACSignal *, RACDisposable *) = ^(RACSignal *signal, RACDisposable *finishedDisposable) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; removeDisposable = &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@synchronized&lt;/span&gt; (signals) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [signals removeObject:signal];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (signals.count == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [subscriber sendCompleted];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [compoundDisposable dispose];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        removeDisposable = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (removeDisposable) [compoundDisposable removeDisposable:finishedDisposable];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;从代码中可以看到[subscriber sendCompleted]就这样,类似发送了一个空信号,subscribeNext的block就不会被调用;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;上一篇阅读了&lt;code&gt;RACSignal&lt;/code&gt;订阅过程的一些源码,这一篇来看看流的一系列操作Mapping,Filtering&lt;br&gt;本文主要内容:&lt;br&gt;1.map操作的源码阅读;(其实是flattenMap:的源码)&lt;br&gt;2.filter操作&lt;br&gt;3.空信号RACEmptySignal&lt;br&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://campusappcn.github.io/tags/iOS/"/>
    
      <category term="ReactiveCocoa" scheme="http://campusappcn.github.io/tags/ReactiveCocoa/"/>
    
  </entry>
  
  <entry>
    <title>关于xcode的buildSettings</title>
    <link href="http://campusappcn.github.io/2016/02/29/xcode%E7%9A%84BuildSettings/"/>
    <id>http://campusappcn.github.io/2016/02/29/xcode的BuildSettings/</id>
    <published>2016-02-28T16:00:00.000Z</published>
    <updated>2016-02-29T14:50:56.000Z</updated>
    
    <content type="html">&lt;p&gt;之前在新项目的自动化打包中碰到的问题，发现在A电脑上可以使用，而在B电脑上总是报“error: Specified application doesn’t exist or isn’t a bundle directory : ‘build/Products/Release-iphoneos/xxx.app”这样的error。很明显这个原因是因为在项目目录下的build文件下找不到相应的.app文件。&lt;br&gt;但是当时还是有点摸不着头脑的。因为两边的代码一样,打包脚本都是一样的，而且因为用的是cocoapod做的第三方托管，所以相对来说工程文件的差异我当时觉得也是没有的。但是不得不承认问题是出在工程文件上。之后用&lt;br&gt;&lt;code&gt;xcodebuild -showBuildSettings&lt;/code&gt;分别查看了下当前项目下的build setting的配置。发现&lt;code&gt;BUILD_DIR&lt;/code&gt;和 &lt;code&gt;BUILD_ROOT&lt;/code&gt;这两项在两台电脑是不一样的，一个是在项目下而另一个是在  &lt;code&gt;/Users/xxx/Library/Developer/Xcode/DerivedData&lt;/code&gt;下。&lt;br&gt;当时就郁闷了，不知道什么时候设置了这个路径。&lt;br&gt;看了关于BuildSetting的设置之后发现，在xcode-&amp;gt;preference-&amp;gt;locations里面有个advanced的设置build location 里面的说明也很明了，选择自定义custom 里面的 “relative to workspace”就可以了。其中下面还可以自定义文件路径。&lt;br&gt;具体如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrcp9.com1.z0.glb.clouddn.com/blog1.png?imageView2/2/w/800/q/75&quot; alt=&quot;locations截图&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xrcp9.com1.z0.glb.clouddn.com/blog2.png?imageView2/2/w/800/q/75&quot; alt=&quot;advanced截图&quot;&gt;&lt;/p&gt;
&lt;p&gt;而其中的custom中有三类分别是:Relative to Derived Data、Relative to Workspace和Absolute。&lt;br&gt;其实光从字面意思上也不难理解，最后一个absolute的本身意思就是“不受任何限制[约束]的; 无条件的”。那个就是说是完全可以自定义的。而前两者Derived Data和Workspace我截了下面两张图来做说明，主要的区别在于红色框内，由于本身我就是在这两处地方的路径不能出现了打包的错误。所以这里会具体说明下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrcp9.com1.z0.glb.clouddn.com/blog3.png?imageView2/2/w/800/q/75&quot; alt=&quot;Relative to Derived Data截图&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xrcp9.com1.z0.glb.clouddn.com/blog4.png?imageView2/2/w/800/q/75&quot; alt=&quot;Relative to Workspace截图&quot;&gt;&lt;br&gt;看了图片之后其实已经是一目了然了。当选择Relative to Derived Data的时候，打包的build文件会在xcode应用的derivedData下，而选择Relative to Workspace的时候build的文件是在项目目录下的build下。&lt;br&gt;而之前我所使用的打包脚本，所取的文件地址就是项目目录下的。看完之后才恍然大悟，但是我现在还是没有想起来当时是什么时候修改的这个参数。这个东西平常的时候也不会去关注。&lt;br&gt;那么既然说到了这个打包时候的build文件，就顺带介绍一下build文件夹下到底有哪些东西。&lt;br&gt;一般情况下build下面主要的是下面两个文件夹&lt;br&gt;Intermediates ————主要是编译中产生的一些文件&lt;br&gt;Products ————编译最终产品的文件（如果是debug下的编译 那么是Debug-xxx，相对的如果是release下的是Release-xxx）。&lt;/p&gt;
&lt;p&gt;关于xcode的buildSetting的东西还有很多。&lt;br&gt;大家可以进到项目文件下 用 &lt;code&gt;xcodebuild -showBuildSettings&lt;/code&gt; 自己去看看 &lt;/p&gt;
</content>
    
    <summary type="html">
    
      一个关于BuildSetting的点~
    
    </summary>
    
      <category term="blog" scheme="http://campusappcn.github.io/categories/blog/"/>
    
    
      <category term="xcode" scheme="http://campusappcn.github.io/tags/xcode/"/>
    
      <category term="buildSetting" scheme="http://campusappcn.github.io/tags/buildSetting/"/>
    
  </entry>
  
  <entry>
    <title>安卓自定义控件状态保存</title>
    <link href="http://campusappcn.github.io/2016/02/28/%E5%AE%89%E5%8D%93%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6%E7%8A%B6%E6%80%81%E4%BF%9D%E5%AD%98/"/>
    <id>http://campusappcn.github.io/2016/02/28/安卓自定义控件状态保存/</id>
    <published>2016-02-28T11:39:25.000Z</published>
    <updated>2016-02-29T11:15:52.000Z</updated>
    
    <content type="html">&lt;p&gt;因为业务原因, 我在安卓端实现了一个简单的富文本编辑器. 在初步实现后, 我将这个自定义的 RichEditor 放到了我们 App 的发帖界面中, 而发帖界面的复杂逻辑也引发了后续的问题.&lt;/p&gt;
&lt;h2 id=&quot;界面回收与状态保持&quot;&gt;&lt;a href=&quot;#界面回收与状态保持&quot; class=&quot;headerlink&quot; title=&quot;界面回收与状态保持&quot;&gt;&lt;/a&gt;界面回收与状态保持&lt;/h2&gt;&lt;p&gt;我们的发帖界面可能唤起选图界面, 而图片处理往往需要消耗可观的内存. 在部分内存紧缺的机型上, 安卓系统为了保证选图界面的内存, 会将发帖界面回收并保存其状态, 在返回到发帖界面时又会将界面重建并恢复其控件状态.&lt;/p&gt;
&lt;p&gt;安卓官方控件, 如 TextView, EditText 等控件在界面重建后, 其中的文本内容和光标位置都会被还原到重建前的状态, 而我的 RichEditor 却一片空白, 为啥?&lt;/p&gt;
&lt;h2 id=&quot;关键方法&quot;&gt;&lt;a href=&quot;#关键方法&quot; class=&quot;headerlink&quot; title=&quot;关键方法&quot;&gt;&lt;/a&gt;关键方法&lt;/h2&gt;&lt;p&gt;Activity/Fragment 的销毁和重建涉及到了两个重要的方法: &lt;code&gt;onSaveInstanceState(Bundle)&lt;/code&gt;和&lt;code&gt;onRestoreInstanceState(Bundle)&lt;/code&gt;, 在这两个方法中, 开发者可以自行存入当前界面的关键信息以便恢复界面状态(当然, Fragment + ViewPager 配套使用时会有一些问题, 相关资料大家可以上网查查).&lt;/p&gt;
&lt;p&gt;View 的状态保存与重建与 Activity 类似, 但是实现过程稍有不同:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Activity 通过 Bundle 对象保存关键值, 其存取采用 key-value 一一对应方式&lt;/li&gt;
&lt;li&gt;View 通过自定义的 SavedState 类型保存关键值, 其存取基于 Parcelable 实现&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;了解了两者的差别后, 我们来看看具体实践:&lt;/p&gt;
&lt;h2 id=&quot;实践&quot;&gt;&lt;a href=&quot;#实践&quot; class=&quot;headerlink&quot; title=&quot;实践&quot;&gt;&lt;/a&gt;实践&lt;/h2&gt;&lt;p&gt;一个简单的例子&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StateSavedView&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;View&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* 省略若干无关代码 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; mClickCount; &lt;span class=&quot;comment&quot;&gt;// 这个 View 被点击的次数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; mHasClicked; &lt;span class=&quot;comment&quot;&gt;// 是否被点击过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 存储当前状态&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; Parcelable &lt;span class=&quot;title&quot;&gt;onSaveInstanceState&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// 一定要将父类状态保存起来&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Parcelable superState = &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onSaveInstanceState();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		SavedState state = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SavedState(superState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		state.clickCount = mClickCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		state.hasClicked = mHasClicked;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; state;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 恢复当前状态&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onRestoreInstanceState&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Parcelable state)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// 检查一下传入的对象是不是自定义的状态类型, 不是的话就要交由父类处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!(state &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; SavedState)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onRestoreInstanceState(state);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		SavedState ss = (SavedState) state;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onRestoreInstanceState(state);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mClickCount = ss.clickCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mHasClicked = ss.hasClicked;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 自定义状态存储, 需要遵守 Parcelable 规约&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SavedState&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BaseSavedState&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Parcelable.Creator&amp;lt;SavedState&amp;gt; CREATOR = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Parcelable.Creator&amp;lt;SavedState&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; SavedState &lt;span class=&quot;title&quot;&gt;createFromParcel&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Parcel in)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SavedState(in);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; SavedState[] newArray(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; size) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SavedState[size];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; clickCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; hasClicked;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SavedState&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Parcelable superState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;(superState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SavedState&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Parcel source)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;(source);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			clickCount = source.reandInt();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			hasClicked = source.readByte() != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;writeToParcel&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Parcel out, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; flags)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.writeToParcel(out, flags);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			out.writeInt(clickCount);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			out.writeByte(hasClicked ? (&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;)&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : (&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;) &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;describeContents&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有以下几点需要注意:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;状态的存取由 Parcelable 实现, 因此字段的存取顺序一定要保持一一对应&lt;/li&gt;
&lt;li&gt;不要忘记调用父类方法, 否则会出错&lt;/li&gt;
&lt;li&gt;这里保存的都是 UI 层的状态, 业务逻辑相关的状态千万不要放在这里, 否则很有可能引发一些隐蔽的 bug&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      在 onSaveInstanceState 和 onRestoreInstanceState 时, 如何保存自定义控件的状态
    
    </summary>
    
      <category term="blog" scheme="http://campusappcn.github.io/categories/blog/"/>
    
    
      <category term="Android" scheme="http://campusappcn.github.io/tags/Android/"/>
    
      <category term="安卓" scheme="http://campusappcn.github.io/tags/%E5%AE%89%E5%8D%93/"/>
    
      <category term="自定义" scheme="http://campusappcn.github.io/tags/%E8%87%AA%E5%AE%9A%E4%B9%89/"/>
    
      <category term="View" scheme="http://campusappcn.github.io/tags/View/"/>
    
      <category term="状态保存" scheme="http://campusappcn.github.io/tags/%E7%8A%B6%E6%80%81%E4%BF%9D%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>ReactiveCocoa2.5修炼 (一)</title>
    <link href="http://campusappcn.github.io/2016/02/28/ReactiveCocoa2-5%E4%BF%AE%E7%82%BC-%E4%B8%80/"/>
    <id>http://campusappcn.github.io/2016/02/28/ReactiveCocoa2-5修炼-一/</id>
    <published>2016-02-28T07:26:02.000Z</published>
    <updated>2016-04-09T08:59:46.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/ReactiveCocoa/ReactiveCocoa&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ReactiveCocoa&lt;/a&gt;是一个FRP的思想(函数式编程思想)在Objective-C中的实现框架,因此,在使用过程中,我们会发现RAC的参数都是一个block.到目前为此,我觉得RAC在做项目过程带来最大的便利是对状态能有很好的控制,自然block作为方法参数使代码变得高聚合,方便了阅读.本文主要对RACSignal类源码进行阅读,来弄明白开发过程中想要弄明白的东西.&lt;/p&gt;
&lt;p&gt;本文主要内容:&lt;br&gt;1.RACSignal类的简单使用&lt;br&gt;2.subscribeNext就能处理数据,看看RAC源码是怎么做的,这个订阅过程是怎么样的&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;RACSignal&quot;&gt;&lt;a href=&quot;#RACSignal&quot; class=&quot;headerlink&quot; title=&quot;RACSignal&quot;&gt;&lt;/a&gt;RACSignal&lt;/h2&gt;&lt;p&gt;RAC的核心,如果用RAC写项目,这个家伙应该是项目中使用次数最多的类.&lt;/p&gt;
&lt;p&gt;简单使用:&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//创建一个信号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RACSignal *signal=[RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[subscriber sendNext:@(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//然后订阅&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[signal subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;x--%@&quot;&lt;/span&gt;,x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到createSignal:的参数就是一个block(一个返回RACDisposable,参数的是实现了RACSubscriber协议的subscriber的block)&lt;br&gt;subscribeNext:参数也是一个block(一个返回void ,参数是随意对象的block)&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;为了看的清楚些,可以这样写&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//定义一个返回RACDisposable的block叫didSubscribe,作为createSignal参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RACDisposable*(^didSubscribe)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber)=^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [subscriber sendNext:@(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RACSignal *signal=[RACSignal createSignal:didSubscribe];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//定义一个返回void的block叫nextBlock,作为subscribeNext的参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (^nextBlock)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x)=^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;x--%@&quot;&lt;/span&gt;,x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[signal subscribeNext:nextBlock];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;看看源码是怎么写的&quot;&gt;&lt;a href=&quot;#看看源码是怎么写的&quot; class=&quot;headerlink&quot; title=&quot;看看源码是怎么写的&quot;&gt;&lt;/a&gt;看看源码是怎么写的&lt;/h2&gt;&lt;h3 id=&quot;1-RACSignal-createSignal-返回Signal&quot;&gt;&lt;a href=&quot;#1-RACSignal-createSignal-返回Signal&quot; class=&quot;headerlink&quot; title=&quot;1.[RACSignal createSignal:]返回Signal&quot;&gt;&lt;/a&gt;1.[RACSignal createSignal:]返回Signal&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//RACSignal.m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (RACSignal *)createSignal:(RACDisposable * (^)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber))didSubscribe &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [RACDynamicSignal createSignal:didSubscribe];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//RACDynamicSignal.m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RACDynamicSignal&lt;/span&gt; ()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;readonly&lt;/span&gt;) RACDisposable * (^didSubscribe)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (RACSignal *)createSignal:(RACDisposable * (^)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber))didSubscribe &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	RACDynamicSignal *signal = [[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	signal-&amp;gt;_didSubscribe = [didSubscribe &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [signal setNameWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;+createSignal:&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;可以看到RACSignal实际是调用了子类RACDynamicSignal来创建Signal&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;子类RACDynamicSignal中有一个didSubscribe的block属性,RACDynamicSignal保存了didSubscribe(这段代码并没有起效)&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;所以返回的Signal内部携带了didSubscribe&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-signal-subscribeNext-做了什么&quot;&gt;&lt;a href=&quot;#2-signal-subscribeNext-做了什么&quot; class=&quot;headerlink&quot; title=&quot;2.[signal subscribeNext:]做了什么&quot;&gt;&lt;/a&gt;2.[signal subscribeNext:]做了什么&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//RACSignal.m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (RACDisposable *)subscribeNext:(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (^)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x))nextBlock &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;NSCParameterAssert&lt;/span&gt;(nextBlock != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	RACSubscriber *o = [RACSubscriber subscriberWithNext:nextBlock error:&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; completed:&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; subscribe:o];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//RACSubscriber.m中,(RACSubscriber.h就是id&amp;lt;RACSubscriber&amp;gt; subscriber中RACSubscriber协议的定义者)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RACSubscriber&lt;/span&gt; ()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (^next)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (^error)(&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (^completed)(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;strong&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;readonly&lt;/span&gt;) RACCompoundDisposable *disposable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (instancetype)subscriberWithNext:(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (^)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x))next error:(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (^)(&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error))error completed:(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (^)(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;))completed &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	RACSubscriber *subscriber = [[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	subscriber-&amp;gt;_next = [next &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	subscriber-&amp;gt;_error = [error &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	subscriber-&amp;gt;_completed = [completed &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; subscriber;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//[self subscribe:o]在RACSignal.m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (RACDisposable *)subscribe:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt;)subscriber &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;NSCAssert&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;This method must be overridden by subclasses&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//所以在RACDynamicSignal.m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (RACDisposable *)subscribe:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt;)subscriber &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;NSCParameterAssert&lt;/span&gt;(subscriber != &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	RACCompoundDisposable *disposable = [RACCompoundDisposable compoundDisposable];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	subscriber = [[RACPassthroughSubscriber alloc] initWithSubscriber:subscriber signal:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; disposable:disposable];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.didSubscribe != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		RACDisposable *schedulingDisposable = [RACScheduler.subscriptionScheduler schedule:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			RACDisposable *innerDisposable = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.didSubscribe(subscriber);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			[disposable addDisposable:innerDisposable];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		[disposable addDisposable:schedulingDisposable];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; disposable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;可以看到subscribeNext方法内部,产生了一个新的对象RACSubscriber &lt;em&gt;o,&lt;/em&gt;o的创建方法中,又将nextBlock调用subscriber-&amp;gt;_next,保存在o的next属性中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;目前为止createSignal在做准备工作,subscribeNext内部的第一步创建了RACSubscriber的实例也是准备工作&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;接来下就是[self subscribe:o]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;RACSignal的[self subscribe:o]由子类RACDynamicSignal实现,在RACDynamicSignal.m中[self subscribe:o]方法可以看到这一行代码RACDisposable  *innerDisposable = self.didSubscribe(subscriber)–开始执行block了&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;3-self-didSubscribe-subscriber&quot;&gt;&lt;a href=&quot;#3-self-didSubscribe-subscriber&quot; class=&quot;headerlink&quot; title=&quot;3.self.didSubscribe(subscriber)&quot;&gt;&lt;/a&gt;3.self.didSubscribe(subscriber)&lt;/h3&gt;&lt;p&gt;这个didSubscribe被调用了,并且传入了一个subscriber,(这个subscriber内部有一个nextBlock)&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//didSubscribe被调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//上文的中didSubscribe定义:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RACDisposable*(^didSubscribe)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber)=^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [subscriber sendNext:@(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//RACSubscriber.m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)sendNext:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)value &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;@synchronized&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (^nextBlock)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;) = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.next &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nextBlock == &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		nextBlock(value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//nextBlock被调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//上文中的nextBlock被调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (^nextBlock)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x)=^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;x--%@&quot;&lt;/span&gt;,x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;didSubscribe被调用,会执行到[subscriber sendNext:]方法&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;在RACSubscriber.m的sendNext:方法将保存在自己身上的nextBlock取出(void (^nextBlock)(id) = [self.next copy]),然后执行nextBlock(value);&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;就是这样Signal可以被订阅产生数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;senderr和sendcomplete的执行过程和sendNext类似&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;整理下过程&quot;&gt;&lt;a href=&quot;#整理下过程&quot; class=&quot;headerlink&quot; title=&quot;整理下过程&quot;&gt;&lt;/a&gt;整理下过程&lt;/h2&gt;&lt;p&gt;1.[RACSignal createSignal:didSubscribe]创建信号,signal内保存didSubscribe&lt;/p&gt;
&lt;p&gt;2.[signal subscribeNext:nextBlock]信号被订阅,此方法内部产生一个RACSubscriber的实例subscriber,将nextBlock保存在subscriber中.(每次subscribeNext就会产生一个RACSubscriber的实例)&lt;/p&gt;
&lt;p&gt;3.[signal subscribeNext:nextBlock]方法内接着调用[self subscribe:subscriber]方法,将保存了nextBlock的subscriber传递,&lt;/p&gt;
&lt;p&gt;4.[self subscribe:subscriber]方法内部取出保存在signal中的self.didSubscribe,执行,&lt;/p&gt;
&lt;p&gt;5.进入didSubscribe的block回调,即[subscriber sendNext:@(1)];return nil;&lt;/p&gt;
&lt;p&gt;6.[subscriber sendNext]将subscriber中保存的nextBlock取出,执行,&lt;/p&gt;
&lt;p&gt;7,进入nextBlock的block回调,即NSLog(@”x–%@”,x);&lt;/p&gt;
&lt;h2 id=&quot;从阅读源码过程中-我们可以知道的&quot;&gt;&lt;a href=&quot;#从阅读源码过程中-我们可以知道的&quot; class=&quot;headerlink&quot; title=&quot;从阅读源码过程中,我们可以知道的&quot;&gt;&lt;/a&gt;从阅读源码过程中,我们可以知道的&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1.如果没有被订阅,那么didSubscribe是不会执行的,&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.didSubscribe如果不调用send的一系列方法,那么订阅也是没有用的&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;做一些测试&quot;&gt;&lt;a href=&quot;#做一些测试&quot; class=&quot;headerlink&quot; title=&quot;做一些测试&quot;&gt;&lt;/a&gt;做一些测试&lt;/h2&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;__block &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; subscriptions=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RACDisposable*(^didSubscribe)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber)=^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    subscriptions++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [subscriber sendNext:@(subscriptions)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RACSignal *signal=[RACSignal createSignal:didSubscribe];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[signal subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;x--%@&quot;&lt;/span&gt;,x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[signal subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;x--%@&quot;&lt;/span&gt;,x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出:&lt;br&gt;2016-02-29 15:53:59.239 RACFunTest[11936:604366] x–1&lt;br&gt;2016-02-29 15:53:59.240 RACFunTest[11936:604366] x–2&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;下次作文内容:信号map,merge,concat,then操作的源码阅读&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/ReactiveCocoa/ReactiveCocoa&quot;&gt;ReactiveCocoa&lt;/a&gt;是一个FRP的思想(函数式编程思想)在Objective-C中的实现框架,因此,在使用过程中,我们会发现RAC的参数都是一个block.到目前为此,我觉得RAC在做项目过程带来最大的便利是对状态能有很好的控制,自然block作为方法参数使代码变得高聚合,方便了阅读.本文主要对RACSignal类源码进行阅读,来弄明白开发过程中想要弄明白的东西.&lt;/p&gt;
&lt;p&gt;本文主要内容:&lt;br&gt;1.RACSignal类的简单使用&lt;br&gt;2.subscribeNext就能处理数据,看看RAC源码是怎么做的,这个订阅过程是怎么样的&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://campusappcn.github.io/tags/iOS/"/>
    
      <category term="ReactiveCocoa" scheme="http://campusappcn.github.io/tags/ReactiveCocoa/"/>
    
  </entry>
  
  <entry>
    <title>浅谈Android开发中多进程共享数据</title>
    <link href="http://campusappcn.github.io/2016/02/28/2016-02-28-%E6%B5%85%E8%B0%88Android%E5%BC%80%E5%8F%91%E4%B8%AD%E5%A4%9A%E8%BF%9B%E7%A8%8B%E5%85%B1%E4%BA%AB%E6%95%B0%E6%8D%AE/"/>
    <id>http://campusappcn.github.io/2016/02/28/2016-02-28-浅谈Android开发中多进程共享数据/</id>
    <published>2016-02-27T16:00:00.000Z</published>
    <updated>2016-02-29T11:15:52.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;最近在工作中遇到一个需求，需要在接收到推送的时候将推送获得的数据存起来，以供app启动时使用。我们会认为这不是So easy吗？只要把数据存到SharedPreferences中，然后让app打开同一个SharedPreferences读取数据就可以了。但是在实际的测试中，我们发现推送进程存入的数据，并不能在app进程中获得。所以这是为什么呢，也许聪明的读者从我们上面的陈述中已经发现了原因，因为我们有两个进程，推送进程负责将推送数据存入，而app进程负责读取，但是正是由于是两个进程，如果它们同时存在，它们各自在内存中保持了自己的SP对象和数据，在推送进程中的存入并不能在app进程体现出来，并且可能会被app进程刷掉更改的数据。那么我们怎么做才能让这两边共享数据呢？请看下面陈述。&lt;/p&gt;
&lt;h1 id=&quot;多进程支持的SharedPreferences（不推荐）&quot;&gt;&lt;a href=&quot;#多进程支持的SharedPreferences（不推荐）&quot; class=&quot;headerlink&quot; title=&quot;多进程支持的SharedPreferences（不推荐）&quot;&gt;&lt;/a&gt;多进程支持的SharedPreferences（不推荐）&lt;/h1&gt;&lt;p&gt;我们原来的做法是使用SharedPreferences, 自然而然想到，SharedPreferences 在MODE_PRIVATE MODE_PUBLIC 之外其实还可以设置多进程的Flag ———— MODE_MULTI_PROCESS&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SharedPreferences myPrefs = context.getSharedPreferences(MY_FILE_NAME, Context.MODE_MULTI_PROCESS | Context.MODE_PRIVATE);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;一旦我们设置了这个Flag，每次调用Context.getSharedPreferences 的时候系统会重新从SP文件中读入数据，因此我们在使用的时候每次读取和存入都要使用Context.getSharedPreferences 重新获取SP实例。即使是这样，由于SP本质上并不是多进程安全的，所以还是无法保证数据的同步，因此该方法我们并没有使用，我们也不推荐使用。&lt;/p&gt;
&lt;h1 id=&quot;Tray&quot;&gt;&lt;a href=&quot;#Tray&quot; class=&quot;headerlink&quot; title=&quot;Tray&quot;&gt;&lt;/a&gt;Tray&lt;/h1&gt;&lt;p&gt;如果SP不是多进程安全的，那么是否有多进程安全的，又有SP功能的第三方项目呢。答案是有的，Tray——一个多进程安全的SharedPreferences，我们可以在Github上找到它，如果是AndroidStudio,可以直接使用Gradle引入，可谓是十分方便，如下是使用的代码，十分简单，没有apply commit，看起来比SP还要简单。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; // create a preference accessor. This is for global app preferences.
final AppPreferences appPreferences = new AppPreferences(getContext()); // this Preference comes for free from the library
// save a key value pair
appPreferences.put(&amp;quot;key&amp;quot;, &amp;quot;lorem ipsum&amp;quot;);

// read the value for your key. the second parameter is a fallback (optional otherwise throws)
final String value = appPreferences.getString(&amp;quot;key&amp;quot;, &amp;quot;default&amp;quot;);
Log.v(TAG, &amp;quot;value: &amp;quot; + value); // value: lorem ipsum

// read a key that isn&amp;apos;t saved. returns the default (or throws without default)
final String defaultValue = appPreferences.getString(&amp;quot;key2&amp;quot;, &amp;quot;default&amp;quot;);
Log.v(TAG, &amp;quot;value: &amp;quot; + defaultValue); // value: default
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但是最终我们并没有选择使用它，主要的原因是它需要minSdk 为15，而我们是支持sdk14的，所以只能果断放弃了。&lt;/p&gt;
&lt;h1 id=&quot;ContentProvider&quot;&gt;&lt;a href=&quot;#ContentProvider&quot; class=&quot;headerlink&quot; title=&quot;ContentProvider&quot;&gt;&lt;/a&gt;ContentProvider&lt;/h1&gt;&lt;p&gt;既然Tray不支持sdk15以下的，那么我们是否可以使用Tray的原理自己实现一个呢？在阅读Tray的源码时我们发现其实它是在ContentProvider的基础上做的，而ContentProvider是Android官方支持的多进程安全的。以下是使用ContentProvider的一个例子。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public class ArticlesProvider extends ContentProvider {  
    private static final String LOG_TAG = &amp;quot;shy.luo.providers.articles.ArticlesProvider&amp;quot;;  

    private static final String DB_NAME = &amp;quot;Articles.db&amp;quot;;  
    private static final String DB_TABLE = &amp;quot;ArticlesTable&amp;quot;;  
    private static final int DB_VERSION = 1;  

    private static final String DB_CREATE = &amp;quot;create table &amp;quot; + DB_TABLE +  
                            &amp;quot; (&amp;quot; + Articles.ID + &amp;quot; integer primary key autoincrement, &amp;quot; +  
                            Articles.TITLE + &amp;quot; text not null, &amp;quot; +  
                            Articles.ABSTRACT + &amp;quot; text not null, &amp;quot; +  
                            Articles.URL + &amp;quot; text not null);&amp;quot;;  

    private static final UriMatcher uriMatcher;  
    static {  
            uriMatcher = new UriMatcher(UriMatcher.NO_MATCH);  
            uriMatcher.addURI(Articles.AUTHORITY, &amp;quot;item&amp;quot;, Articles.ITEM);  
            uriMatcher.addURI(Articles.AUTHORITY, &amp;quot;item/#&amp;quot;, Articles.ITEM_ID);  
            uriMatcher.addURI(Articles.AUTHORITY, &amp;quot;pos/#&amp;quot;, Articles.ITEM_POS);  
    }  

    private static final HashMap&amp;lt;String, String&amp;gt; articleProjectionMap;  
    static {  
            articleProjectionMap = new HashMap&amp;lt;String, String&amp;gt;();  
            articleProjectionMap.put(Articles.ID, Articles.ID);  
            articleProjectionMap.put(Articles.TITLE, Articles.TITLE);  
            articleProjectionMap.put(Articles.ABSTRACT, Articles.ABSTRACT);  
            articleProjectionMap.put(Articles.URL, Articles.URL);  
    }  

    private DBHelper dbHelper = null;  
    private ContentResolver resolver = null;  

    @Override  
    public boolean onCreate() {  
            Context context = getContext();  
            resolver = context.getContentResolver();  
            dbHelper = new DBHelper(context, DB_NAME, null, DB_VERSION);  

            Log.i(LOG_TAG, &amp;quot;Articles Provider Create&amp;quot;);  

            return true;  
    }  

    @Override  
    public String getType(Uri uri) {  
            switch (uriMatcher.match(uri)) {  
            case Articles.ITEM:  
                    return Articles.CONTENT_TYPE;  
            case Articles.ITEM_ID:  
            case Articles.ITEM_POS:  
                    return Articles.CONTENT_ITEM_TYPE;  
            default:  
                    throw new IllegalArgumentException(&amp;quot;Error Uri: &amp;quot; + uri);  
            }  
    }  

    @Override  
    public Uri insert(Uri uri, ContentValues values) {  
            if(uriMatcher.match(uri) != Articles.ITEM) {  
                    throw new IllegalArgumentException(&amp;quot;Error Uri: &amp;quot; + uri);  
            }  

            SQLiteDatabase db = dbHelper.getWritableDatabase();  

            long id = db.insert(DB_TABLE, Articles.ID, values);  
            if(id &amp;lt; 0) {  
                    throw new SQLiteException(&amp;quot;Unable to insert &amp;quot; + values + &amp;quot; for &amp;quot; + uri);  
            }  

            Uri newUri = ContentUris.withAppendedId(uri, id);  
            resolver.notifyChange(newUri, null);  

            return newUri;  
    }  

    @Override  
    public int update(Uri uri, ContentValues values, String selection, String[] selectionArgs) {  
            SQLiteDatabase db = dbHelper.getWritableDatabase();  
            int count = 0;  

            switch(uriMatcher.match(uri)) {  
            case Articles.ITEM: {  
                    count = db.update(DB_TABLE, values, selection, selectionArgs);  
                    break;  
            }  
            case Articles.ITEM_ID: {  
                    String id = uri.getPathSegments().get(1);  
                    count = db.update(DB_TABLE, values, Articles.ID + &amp;quot;=&amp;quot; + id  
                                    + (!TextUtils.isEmpty(selection) ? &amp;quot; and (&amp;quot; + selection + &amp;apos;)&amp;apos; : &amp;quot;&amp;quot;), selectionArgs);  
                    break;  
            }  
            default:  
                    throw new IllegalArgumentException(&amp;quot;Error Uri: &amp;quot; + uri);  
            }  

            resolver.notifyChange(uri, null);  

            return count;  
    }  

    @Override  
    public int delete(Uri uri, String selection, String[] selectionArgs) {  
            SQLiteDatabase db = dbHelper.getWritableDatabase();  
            int count = 0;  

            switch(uriMatcher.match(uri)) {  
            case Articles.ITEM: {  
                    count = db.delete(DB_TABLE, selection, selectionArgs);  
                    break;  
            }  
            case Articles.ITEM_ID: {  
                    String id = uri.getPathSegments().get(1);  
                    count = db.delete(DB_TABLE, Articles.ID + &amp;quot;=&amp;quot; + id  
                                    + (!TextUtils.isEmpty(selection) ? &amp;quot; and (&amp;quot; + selection + &amp;apos;)&amp;apos; : &amp;quot;&amp;quot;), selectionArgs);  
                    break;  
            }  
            default:  
                    throw new IllegalArgumentException(&amp;quot;Error Uri: &amp;quot; + uri);  
            }  

            resolver.notifyChange(uri, null);  

            return count;  
    }  

    @Override  
    public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) {  
            Log.i(LOG_TAG, &amp;quot;ArticlesProvider.query: &amp;quot; + uri);  

            SQLiteDatabase db = dbHelper.getReadableDatabase();  

            SQLiteQueryBuilder sqlBuilder = new SQLiteQueryBuilder();  
            String limit = null;  

            switch (uriMatcher.match(uri)) {  
            case Articles.ITEM: {  
                    sqlBuilder.setTables(DB_TABLE);  
                    sqlBuilder.setProjectionMap(articleProjectionMap);  
                    break;  
            }  
            case Articles.ITEM_ID: {  
                    String id = uri.getPathSegments().get(1);  
                    sqlBuilder.setTables(DB_TABLE);  
                    sqlBuilder.setProjectionMap(articleProjectionMap);  
                    sqlBuilder.appendWhere(Articles.ID + &amp;quot;=&amp;quot; + id);  
                    break;  
            }  
            case Articles.ITEM_POS: {  
                    String pos = uri.getPathSegments().get(1);  
                    sqlBuilder.setTables(DB_TABLE);  
                    sqlBuilder.setProjectionMap(articleProjectionMap);  
                    limit = pos + &amp;quot;, 1&amp;quot;;  
                    break;  
            }  
            default:  
                    throw new IllegalArgumentException(&amp;quot;Error Uri: &amp;quot; + uri);  
            }  

            Cursor cursor = sqlBuilder.query(db, projection, selection, selectionArgs, null, null, TextUtils.isEmpty(sortOrder) ? Articles.DEFAULT_SORT_ORDER : sortOrder, limit);  
            cursor.setNotificationUri(resolver, uri);  

            return cursor;  
    }  

    @Override  
    public Bundle call(String method, String request, Bundle args) {  
            Log.i(LOG_TAG, &amp;quot;ArticlesProvider.call: &amp;quot; + method);  

            if(method.equals(Articles.METHOD_GET_ITEM_COUNT)) {  
                    return getItemCount();  
            }  

            throw new IllegalArgumentException(&amp;quot;Error method call: &amp;quot; + method);  
    }  

    private Bundle getItemCount() {  
            Log.i(LOG_TAG, &amp;quot;ArticlesProvider.getItemCount&amp;quot;);  

            SQLiteDatabase db = dbHelper.getReadableDatabase();  
            Cursor cursor = db.rawQuery(&amp;quot;select count(*) from &amp;quot; + DB_TABLE, null);  

            int count = 0;  
            if (cursor.moveToFirst()) {  
                    count = cursor.getInt(0);  
            }  

            Bundle bundle = new Bundle();  
            bundle.putInt(Articles.KEY_ITEM_COUNT, count);  

            cursor.close();  
            db.close();  

            return bundle;  
    }  

    private static class DBHelper extends SQLiteOpenHelper {  
            public DBHelper(Context context, String name, CursorFactory factory, int version) {  
                    super(context, name, factory, version);  
            }  

            @Override  
            public void onCreate(SQLiteDatabase db) {  
                    db.execSQL(DB_CREATE);  
            }  

            @Override  
            public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {  
                    db.execSQL(&amp;quot;DROP TABLE IF EXISTS &amp;quot; + DB_TABLE);  
                    onCreate(db);  
            }  
    }  
}  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们需要创建一个类继承自ContentProvider，并重载以下方法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;onCreate()，用来执行一些初始化的工作。&lt;/li&gt;
&lt;li&gt;query(Uri, String[], String, String[], String)，用来返回数据给调用者。&lt;/li&gt;
&lt;li&gt;insert(Uri, ContentValues)，用来插入新的数据。&lt;/li&gt;
&lt;li&gt;update(Uri, ContentValues, String, String[])，用来更新已有的数据。&lt;/li&gt;
&lt;li&gt;delete(Uri, String, String[])，用来删除数据。&lt;/li&gt;
&lt;li&gt;getType(Uri)，用来返回数据的MIME类型。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具体使用参考  &lt;a href=&quot;http://blog.csdn.net/luoshengyang/article/details/6950440&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; Android应用程序组件Content Provider应用实例&lt;/a&gt;这篇博客，这里不再赘述。&lt;br&gt;在以上对ContentProvider的使用过程中，我们发现过程比较繁琐，如果对于比较复杂的需求可能还比较使用，但是我们这里的需求其实很简单，完全不需要搞得那么复杂，所以最后我们也没有使用这个方法（你可以理解为本博主比较Lazy）。&lt;/p&gt;
&lt;p&gt;#Broadcast&lt;br&gt;那么是否有更简单的方法呢？由于想到了ContentProvider，我们不由地想到另一个android组件，BroadcastReceiver。那么我们是否可以使用Broadcast 将我们收到的推送数据发送给app进程呢。bingo，这似乎正是我们寻找的又简单又能解决问题的方法。我们来看下代码。&lt;/p&gt;
&lt;p&gt;首先在推送进程收到推送消息时，我们将推送数据存入SP，如果这时候没有app进程，那么下次app进程启动的时候该存入的数据就会被app进程读取到。而如果这时候app进程存在，那么之后的代码就会生效，它使用LocalBroadcastManager 发送一个广播。LocalBroadcastManager发送的广播不会被app之外接收到，通过它注册的Receiver也不会接收到app之外的广播，因此拥有更高的效率。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pushPref.add(push);

Intent intent = new Intent(PushHandler.KEY_GET_PUSH);
intent.putExtra(PushHandler.KEY_PUSH_CONTENT, d);
LocalBroadcastManager.getInstance(context).sendBroadcastSync(intent);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;而我们在app进程则注册了一个BroadReceiver来接收上面发出的广播。在收到广播之后将推送数据存入SP。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public class PushHandler {

public static String KEY_GET_PUSH = &amp;quot;PUSH_RECEIVED&amp;quot;;
public static String KEY_PUSH_CONTENT = &amp;quot;PUSH_CONTENT&amp;quot;;

// region 推送处理push
/**
 * 当有推送时，发一次请求mPushReceiver
 */
private static BroadcastReceiver mPushReceiver = new BroadcastReceiver() {
    @Override
    public void onReceive(Context context, Intent intent) {
        Timber.i(&amp;quot;在NoticeAction中收到广播&amp;quot;);
        PushPref pushPref = App.DI().pushPref();
        try {
            String pushContent = intent.getStringExtra(KEY_PUSH_CONTENT);
            PushEntity pushEntity = App.DI().gson().fromJson(pushContent, PushEntity.class);
            pushPref.add(pushEntity);
        } catch (Exception e){
            Timber.e(e, &amp;quot;存储推送内容出错&amp;quot;);
        }
    }
};

public static  void startListeningToPush(){
    try {
        LocalBroadcastManager.getInstance(App.getContext()).registerReceiver(mPushReceiver, new IntentFilter(KEY_GET_PUSH));
    } catch (Exception e) {
        Timber.e(e, &amp;quot;wtf&amp;quot;);
    }
}
public static void stopListeningToPush(){
    try {
        LocalBroadcastManager.getInstance(App.getContext()).unregisterReceiver(mPushReceiver);
    } catch (Exception e) {
        Timber.e(e, &amp;quot;wtf&amp;quot;);
    }
}
// endregion
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;该方法相对于上面的方法使用简单，安全可靠，能够比较好的实现我们的需求。不过，在需求比较复杂的时候还是建议使用ContentProvider，因为毕竟这样的方法不是堂堂正道，有种剑走偏锋的感觉。&lt;/p&gt;
&lt;h1 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h1&gt;&lt;p&gt;实现一个需求可以有很多方法，而我们需要寻找的是又简单有可靠的方法，在写代码之前不如多找找资料，多听听别人的意见。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      本篇博客主要介绍如何在多进程之间同步数据
    
    </summary>
    
      <category term="blog" scheme="http://campusappcn.github.io/categories/blog/"/>
    
    
      <category term="Development" scheme="http://campusappcn.github.io/tags/Development/"/>
    
      <category term="Android" scheme="http://campusappcn.github.io/tags/Android/"/>
    
  </entry>
  
</feed>
